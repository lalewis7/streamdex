[{"D:\\streamfinder\\client\\src\\App.js":"1","D:\\streamfinder\\client\\src\\reportWebVitals.js":"2","D:\\streamfinder\\client\\src\\pages\\TitlePage.js":"3","D:\\streamfinder\\client\\src\\pages\\Profile.js":"4","D:\\streamfinder\\client\\src\\pages\\Nav.js":"5","D:\\streamfinder\\client\\src\\config.js":"6","D:\\streamfinder\\client\\src\\comps\\Title.js":"7","D:\\streamfinder\\client\\src\\utils.js":"8","D:\\streamfinder\\client\\src\\comps\\Login.js":"9","D:\\streamfinder\\client\\src\\index.js":"10","D:\\streamfinder\\client\\src\\pages\\Home.js":"11","D:\\streamfinder\\client\\src\\pages\\Discover.js":"12","D:\\streamfinder\\client\\src\\pages\\Streams.js":"13","D:\\streamfinder\\client\\src\\validate.js":"14","D:\\streamfinder\\client\\src\\comps\\TitleDetails.js":"15","D:\\streamfinder\\client\\src\\pages\\Search.js":"16","D:\\streamfinder\\client\\src\\storage.js":"17","D:\\streamfinder\\client\\src\\comps\\TitlePreview.js":"18","D:\\streamfinder\\client\\src\\comps\\Footer.js":"19","D:\\streamfinder\\client\\src\\comps\\Settings.js":"20"},{"size":2203,"mtime":1623475029308,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1618938790153,"results":"23","hashOfConfig":"22"},{"size":791,"mtime":1623526815318,"results":"24","hashOfConfig":"22"},{"size":6921,"mtime":1622487396280,"results":"25","hashOfConfig":"22"},{"size":6799,"mtime":1623475082031,"results":"26","hashOfConfig":"22"},{"size":56,"mtime":1618938790151,"results":"27","hashOfConfig":"22"},{"size":2512,"mtime":1623474615411,"results":"28","hashOfConfig":"22"},{"size":160,"mtime":1622487396304,"results":"29","hashOfConfig":"22"},{"size":19556,"mtime":1622861038746,"results":"30","hashOfConfig":"22"},{"size":934,"mtime":1622860983578,"results":"31","hashOfConfig":"22"},{"size":1340,"mtime":1623469520571,"results":"32","hashOfConfig":"22"},{"size":1254,"mtime":1623474855246,"results":"33","hashOfConfig":"22"},{"size":1929,"mtime":1622487396290,"results":"34","hashOfConfig":"22"},{"size":360,"mtime":1618938790154,"results":"35","hashOfConfig":"22"},{"size":2708,"mtime":1622487396232,"results":"36","hashOfConfig":"22"},{"size":2551,"mtime":1623474375781,"results":"37","hashOfConfig":"22"},{"size":1082,"mtime":1618938790153,"results":"38","hashOfConfig":"22"},{"size":1144,"mtime":1622487396255,"results":"39","hashOfConfig":"22"},{"size":1172,"mtime":1623475091642,"results":"40","hashOfConfig":"22"},{"size":1319,"mtime":1623474414741,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"sifqvh",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\streamfinder\\client\\src\\App.js",["87","88"],"D:\\streamfinder\\client\\src\\reportWebVitals.js",[],"D:\\streamfinder\\client\\src\\pages\\TitlePage.js",["89","90"],"D:\\streamfinder\\client\\src\\pages\\Profile.js",["91","92","93","94"],"import React, { Profiler } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Settings from '../comps/Settings.js';\r\n\r\nvar Validate = require('../validate.js');\r\nvar Config = require('../config.js');\r\nvar Storage = require('../storage.js');\r\n\r\nclass Profile extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            currentPassword: \"\",\r\n            newPassword: \"\",\r\n            newPasswordConf: \"\",\r\n\r\n            usernameClass: \"\",\r\n            usernameInvalid: \"\",\r\n            emailClass: \"\",\r\n            newPasswordClass: \"\",\r\n            newPasswordConfClass: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.usernameChange = this.usernameChange.bind(this);\r\n        this.usernameValidate = this.usernameValidate.bind(this);\r\n        this.emailChange = this.emailChange.bind(this);\r\n        this.emailValidate = this.emailValidate.bind(this);\r\n        this.currentPasswordChange = this.currentPasswordChange.bind(this);\r\n        this.newPasswordChange = this.newPasswordChange.bind(this);\r\n        this.newPasswordValidate = this.newPasswordValidate.bind(this);\r\n        this.newPasswordConfChange = this.newPasswordConfChange.bind(this);\r\n    }\r\n\r\n    handleChange (evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n    }\r\n\r\n    usernameChange (evt) {\r\n        this.setState({username: evt.target.value});\r\n        if (Validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-valid\"});\r\n        fetch(Config.API+\"handle/\"+evt.target.value)\r\n        .then(res => {\r\n            if (res.status == 200 && Validate.username(evt.target.value))\r\n                this.setState({usernameClass: \"is-valid\"});\r\n            if (res.status != 200)\r\n                this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username already taken.\"});\r\n        }, \r\n        err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    usernameValidate (evt) {\r\n        if (!Validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username must be 4-32 characters long and only contain letters and digits.\"});\r\n    }\r\n\r\n    emailChange (evt) {\r\n        this.setState({email: evt.target.value});\r\n        if (evt.target.value === \"\")\r\n            this.setState({emailClass: \"\"});\r\n        else if (Validate.email(evt.target.value))\r\n            this.setState({emailClass: \"is-valid\"});\r\n        else\r\n            this.setState({emailClass: \"is-invalid\"});\r\n    }\r\n\r\n    emailValidate (evt) {\r\n        if (!Validate.email(evt.target.value) && evt.target.value !== \"\")\r\n            this.setState({emailClass: \"is-invalid\"});\r\n    }\r\n\r\n    currentPasswordChange(evt){\r\n        this.setState({currentPassword: evt.target.value});\r\n    }\r\n\r\n    newPasswordChange(evt) {\r\n        this.setState({newPassword: evt.target.value});\r\n        if (Validate.password(evt.target.value))\r\n            this.setState({newPasswordClass: \"is-valid\"})\r\n        if (!Validate.password(evt.target.value))\r\n            this.setState({newPasswordClass: \"is-invalid\"});\r\n    }\r\n\r\n    newPasswordValidate(evt){\r\n        if (!Validate.password(evt.target.value))\r\n            this.setState({newPasswordClass: \"is-invalid\"});\r\n    }\r\n\r\n    newPasswordConfChange(evt){\r\n        this.setState({newPasswordConf: evt.target.value});\r\n        if (this.state.newPassword !== evt.target.value && evt.target.value.length >= this.state.newPassword.length)\r\n            this.setState({newPasswordConfClass: \"is-invalid\"});\r\n        else if (this.state.newPassword === \"\")\r\n            this.setState({newPasswordConfClass: \"\"});\r\n        else if (this.state.newPassword === evt.target.value)\r\n            this.setState({newPasswordConfClass: \"is-valid\"});\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (Storage.getToken()){\r\n            if (Storage.getUsername())\r\n                this.setState({username: Storage.getUsername()});\r\n            if (Storage.getEmail())\r\n                this.setState({email: Storage.getEmail()});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        var content = <div>\r\n            <form>\r\n                <h4>User Information</h4>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"accUsername\" class=\"form-label\">Username</label>\r\n                    <input type=\"text\" class={\"form-control \"+this.state.usernameClass} id=\"accUsername\" placeholder=\"Username\" value={this.state.username} onChange={this.usernameChange} onBlur={this.usernameValidate}/>\r\n                    <div class=\"invalid-feedback\">{this.state.usernameInvalid}</div>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"accEmail\" class=\"form-label\">Email</label>\r\n                    <input type=\"email\" class={\"form-control \"+this.state.emailClass} id=\"accEmail\" placeholder=\"Email\" value={this.state.email} onChange={this.emailChange} onBlur={this.emailValidate}/>\r\n                    <div class=\"invalid-feedback\">Email invalid.</div>\r\n                </div>\r\n                <hr/>\r\n                <h4>Change Password</h4>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"accCurentPassword\" class=\"form-label\">Current Password</label>\r\n                    <input type=\"password\" class=\"form-control \" id=\"accCurentPassword\" placeholder=\"Current Password\" value={this.state.currentPassword} onChange={this.currentPasswordChange} />\r\n                    <small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\r\n                        Your current password is required to change your password.\r\n                    </small>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"accPassword\" class=\"form-label\">New Password</label>\r\n                    <input type=\"password\" class={\"form-control \"+this.state.newPasswordClass} id=\"accPassword\" placeholder=\"New Password\" value={this.state.newPassword} onChange={this.newPasswordChange} onBlur={this.newPasswordValidate}/>\r\n                    <div class=\"invalid-feedback\">Password must be 8-64 characters long.</div>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"accPasswordConfirm\" class=\"form-label\">Confirm Password</label>\r\n                    <input type=\"password\" class={\"form-control \"+this.state.newPasswordConfClass} id=\"accPasswordConfirm\" placeholder=\"Confirm Password\" value={this.state.newPasswordConf} onChange={this.newPasswordConfChange} />\r\n                    <div class=\"invalid-feedback\">Passwords do not match.</div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary float-right\">Save Changes</button>\r\n            </form>\r\n        </div>\r\n        return <Settings content={content}/>\r\n    }\r\n\r\n}\r\n\r\nexport default Profile;",["95","96"],"D:\\streamfinder\\client\\src\\pages\\Nav.js",["97","98","99","100","101","102"],"D:\\streamfinder\\client\\src\\config.js",[],["103","104"],"D:\\streamfinder\\client\\src\\comps\\Title.js",["105"],"D:\\streamfinder\\client\\src\\utils.js",[],"D:\\streamfinder\\client\\src\\comps\\Login.js",["106","107","108"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Config from '../config.js';\r\n//import $ from 'jquery';\r\n\r\nvar Storage = require('../storage.js');\r\nvar Validate = require('../validate.js');\r\n\r\n/**\r\n * Contains all inputs and labels for signup form\r\n * Used as child component for Login\r\n */\r\nclass SignupForm extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // form data\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n\r\n            // input classes (bootstrap and design changes)\r\n            usernameClass: '',\r\n            emailClass: '',\r\n            passwordClass: '',\r\n            passwordConfirmClass: '',\r\n\r\n            // invalid messages\r\n            usernameInvalid: '',\r\n        }\r\n        // bind this\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.usernameChange = this.usernameChange.bind(this);\r\n        this.usernameValidate = this.usernameValidate.bind(this);\r\n        this.emailChange = this.emailChange.bind(this);\r\n        this.emailValidate = this.emailValidate.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n        this.passwordValidate = this.passwordValidate.bind(this);\r\n        this.passwordConfirmChange = this.passwordConfirmChange.bind(this);\r\n        // update parent\r\n        this.sendData();\r\n    }\r\n\r\n    /**\r\n     * Sends data to parent.\r\n     */\r\n    sendData = () => {\r\n        this.props.getData({\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            passwordConfirm: this.state.passwordConfirm\r\n        });\r\n    }\r\n\r\n    /**\r\n     * called from onChange and changes any input in the component state with name = value\r\n     * @param {Object} evt \r\n     */\r\n    handleChange (evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value }, () => {\r\n            this.sendData();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles changes to username input\r\n     * Checks if username is already taken\r\n     * @param {Object} evt \r\n     */\r\n    usernameChange (evt) {\r\n        // set value\r\n        this.setState({username: evt.target.value}, () => {\r\n            this.sendData();\r\n        });\r\n        // validate data\r\n        if (Validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-valid\"});\r\n        // check if username is available\r\n        fetch(Config.API+\"handle/\"+evt.target.value)\r\n        .then(res => {\r\n            if (res.status == 200 && Validate.username(evt.target.value))\r\n                this.setState({usernameClass: \"is-valid\"});\r\n            if (res.status != 200)\r\n                this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username already taken.\"});\r\n        }, \r\n        err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks if username is valid\r\n     * Used for onBlur event (input losses focus)\r\n     * @param {Object} evt \r\n     */\r\n    usernameValidate (evt) {\r\n        if (!Validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username must be 4-32 characters long and only contain letters and digits.\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to email input\r\n     * @param {Object} evt \r\n     */\r\n    emailChange (evt) {\r\n        // set value\r\n        this.setState({email: evt.target.value}, () => {\r\n            this.sendData();\r\n        });\r\n        // email not required (no value is ok)\r\n        if (evt.target.value === \"\")\r\n            this.setState({emailClass: \"\"});\r\n        // validate email\r\n        if (Validate.email(evt.target.value))\r\n            this.setState({emailClass: \"is-valid\"});\r\n    }\r\n\r\n    /**\r\n     * Checks if email is valid\r\n     * @param {Object} evt \r\n     */\r\n    emailValidate (evt) {\r\n        if (!Validate.email(evt.target.value) && evt.target.value !== \"\")\r\n            this.setState({emailClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to password input\r\n     * @param {Object} evt \r\n     */\r\n    passwordChange(evt){\r\n        this.setState({password: evt.target.value}, () => {\r\n            this.sendData();\r\n        });\r\n        if (Validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-valid\"})\r\n        if (!Validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Checks if password is valid\r\n     * @param {Object} evt \r\n     */\r\n    passwordValidate (evt) {\r\n        console.log(\"here\");\r\n        if (!Validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to confirm password change\r\n     * @param {Object} evt \r\n     */\r\n    passwordConfirmChange(evt){\r\n        // set value\r\n        this.setState({passwordConfirm: evt.target.value}, () => {\r\n            this.sendData();\r\n        });\r\n        // only set to not valid if value is more or equal characters\r\n        if (this.state.password !== evt.target.value && evt.target.value.length >= this.state.password.length)\r\n            this.setState({passwordConfirmClass: \"is-invalid\"});\r\n        else if (this.state.password === \"\")\r\n            this.setState({passwordConfirmClass: \"\"});\r\n        else if (this.state.password === evt.target.value)\r\n            this.setState({passwordConfirmClass: \"is-valid\"});\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-text\" >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\r\n                            </svg>\r\n                        </span>\r\n                        <input type=\"text\" class={\"form-control \"+this.state.usernameClass} id=\"signupUsername\" placeholder=\"Username\" value={this.state.username} onChange={this.usernameChange} onBlur={this.usernameValidate}/>\r\n                        <div class=\"invalid-feedback\">{this.state.usernameInvalid}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-text\" >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.15em\" height=\"1.15em\" fill=\"currentColor\" class=\"bi bi-envelope-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555zM0 4.697v7.104l5.803-3.558L0 4.697zM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757zm3.436-.586L16 11.801V4.697l-5.803 3.546z\"/>\r\n                            </svg>\r\n                        </span>\r\n                        <input type=\"email\" class={\"form-control \"+this.state.emailClass} id=\"signupEmail\" placeholder=\"Email\" value={this.state.email} onChange={this.emailChange} onBlur={this.emailValidate}/>\r\n                        <div class=\"invalid-feedback\">Email invalid.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-text\" >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.15em\" height=\"1.15em\" fill=\"currentColor\" class=\"bi bi-lock-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"/>\r\n                            </svg>\r\n                        </span>\r\n                        <input type=\"password\" class={\"form-control \"+this.state.passwordClass} id=\"signupPassword\" placeholder=\"Password\" value={this.state.password} onChange={this.passwordChange} onBlur={this.passwordValidate}/>\r\n                        <div class=\"invalid-feedback\">Password must be 8-64 characters long.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-text\" >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.15em\" height=\"1.15em\" fill=\"currentColor\" class=\"bi bi-lock-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"/>\r\n                            </svg>\r\n                        </span>\r\n                        <input type=\"password\" class={\"form-control \"+this.state.passwordConfirmClass} id=\"signupPasswordConfirm\" placeholder=\"Confirm Password\" value={this.state.passwordConfirm} onChange={this.passwordConfirmChange} />\r\n                        <div class=\"invalid-feedback\">Passwords do not match.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // form data\r\n            user: '',\r\n            password: '',\r\n        };\r\n        // bind this\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n        // update parent\r\n        this.sendData();\r\n    }\r\n\r\n    sendData = () => {\r\n        this.props.getData({\r\n            user: this.state.user,\r\n            password: this.state.password\r\n        });\r\n    }\r\n\r\n    handleChange (evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value }, () => {\r\n            this.sendData();\r\n        });\r\n    }\r\n\r\n    passwordChange (evt) {\r\n        this.setState({password: evt.target.value}, () => {\r\n            this.sendData();\r\n        });\r\n        this.setState({passwordClass: \"\"});\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-text\" >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.15em\" height=\"1.15em\" fill=\"currentColor\" class=\"bi bi-envelope-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555zM0 4.697v7.104l5.803-3.558L0 4.697zM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757zm3.436-.586L16 11.801V4.697l-5.803 3.546z\"/>\r\n                            </svg>\r\n                        </span>\r\n                        <input type=\"text\" class=\"form-control\" id=\"loginUsername\" placeholder=\"Email\" value={this.state.user} name=\"user\" onChange={this.handleChange}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-text\" >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.15em\" height=\"1.15em\" fill=\"currentColor\" class=\"bi bi-lock-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"/>\r\n                            </svg>\r\n                        </span>\r\n                        <input type=\"password\" class={\"form-control \"+this.props.passwordClass} id=\"loginPassword\" placeholder=\"Password\" value={this.state.password} name=\"loginPassword\" onChange={this.passwordChange} />\r\n                        <div class=\"invalid-feedback\">Username or password incorrect. Please try again.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // is modal visible\r\n            showLoginPage: true,\r\n            loginData: {},\r\n            signupData: {},\r\n            loginError: 'test',\r\n            passwordClass: ''\r\n        }\r\n        // bind this\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.swapPage = this.swapPage.bind(this);\r\n        this.signup = this.signup.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Sets state login data used as callback for children.\r\n     * @param {Object} data \r\n     */\r\n    loginDataCB = (data) => {\r\n        this.setState({loginData: data});\r\n    }\r\n\r\n    /**\r\n     * Sets state signup data used as callback for children.\r\n     * @param {Object} data \r\n     */\r\n    signupDataCB = (data) => {\r\n        this.setState({signupData: data});\r\n    }\r\n\r\n    handleChange (evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n    }\r\n\r\n    /**\r\n     * Signup attempt for user\r\n     * @param {Object} evt \r\n     */\r\n    signup (evt) {\r\n        evt.preventDefault();\r\n        // send post to create user\r\n        fetch(Config.API+\"users\", \r\n        {\r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({handle: this.state.signupData.username, email: this.state.signupData.email, \r\n                password: this.state.signupData.password})\r\n        })\r\n        .then(res => {\r\n            // successfully created user\r\n            if (res.ok)\r\n                // get token for newly created user\r\n                fetch(Config.API+\"auth\",\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {'user': this.state.signupData.username, 'password': this.state.signupData.password}\r\n                })\r\n                .then(res => {\r\n                    if (res.ok){\r\n                        res.text().then(token => {\r\n                            Storage.setToken(token);\r\n                        });\r\n                    } else {\r\n                        console.log('Failed to login after signup');\r\n                    }\r\n                },\r\n                err => {\r\n                    console.log(err);\r\n                });\r\n                window.$('#loginModal').modal('hide');\r\n        }, err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Login attempt (pressed login btn)\r\n     * @param {Object} evt \r\n     */\r\n    login (evt) {\r\n        // do not submit form\r\n        evt.preventDefault();\r\n        console.log(this.state.loginData);\r\n        // attempt to get token\r\n        fetch(Config.API+\"auth\",\r\n        {\r\n            method: 'GET',\r\n            headers: {'user': this.state.loginData.user, 'password': this.state.loginData.password}\r\n        })\r\n        .then(res => {\r\n            // successful credentials\r\n            if (res.ok){\r\n                res.text().then(token => {\r\n                    // save token\r\n                    this.props.setToken(token);\r\n                    // remove login page\r\n                    window.$('#loginModal').modal('hide');\r\n                    // update self info\r\n                    fetch(Config.API+\"self\", {\r\n                        method: 'GET',\r\n                        headers: {'token': Storage.getToken()}\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(self => {\r\n                        this.props.setUser(self);\r\n                    });\r\n                });\r\n            }\r\n            // incorrect credentials\r\n            else{\r\n                this.setState({passwordClass: \"is-invalid\"});\r\n            }\r\n        },\r\n        err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    swapPage () {\r\n        this.setState({showLoginPage: !this.state.showLoginPage});\r\n    }\r\n\r\n    componentDidMount(){}\r\n\r\n    render(){\r\n        var formContents = (<div>\r\n            <div class=\"modal-body\">\r\n                <form onSubmit={this.login}>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <h3 class=\"text-center m-4 mt-1\">LOGIN</h3>\r\n                            </div>\r\n                        </div>\r\n                        <LoginForm getData = {this.loginDataCB} passwordClass = {this.state.passwordClass} />\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 d-grid\">\r\n                                <button type=\"submit\" class=\"btn btn-primary\">LOGIN</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <p class=\"text-center mt-3\">\r\n                                Not a member?\r\n                                <a href=\"javacript:void(0);\" class=\"link-secondary ms-1\" onClick={this.swapPage}>Sign up now</a>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>);\r\n        if (!this.state.showLoginPage)\r\n            formContents = <div>\r\n                <div class=\"modal-body\">\r\n                    <form onSubmit={this.signup}>\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <h3 class=\"text-center m-4 mt-1\">SIGN UP</h3>\r\n                                </div>\r\n                            </div>\r\n                            <SignupForm getData = {this.signupDataCB} />\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12 d-grid\">\r\n                                    <button type=\"submit\" class=\"btn btn-primary\">SIGN UP</button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <p class=\"text-center mt-3\">\r\n                                    Already a member?\r\n                                    <a href=\"javacript:void(0);\" class=\"link-secondary ms-1\" onClick={this.swapPage}>Login now</a>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        return (<div class=\"modal fade\" id=\"loginModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"loginModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    {formContents}\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Login);","D:\\streamfinder\\client\\src\\index.js",[],"D:\\streamfinder\\client\\src\\pages\\Home.js",["109","110"],"D:\\streamfinder\\client\\src\\pages\\Discover.js",["111","112"],"D:\\streamfinder\\client\\src\\pages\\Streams.js",["113","114","115","116","117"],"import React, { Profiler } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Settings from '../comps/Settings.js';\r\nimport Platforms from '../platforms.json';\r\n\r\nclass Streams extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        Platforms.map(service => {\r\n            this.state[service.id+\"_enabled\"] = localStorage.getItem(service.id+\"_enabled\") !== null ? localStorage.getItem(service.id+\"_enabled\") === 'true' : false;\r\n        });\r\n        this.streamPill = this.streamPill.bind(this);\r\n        this.pillChanged = this.pillChanged.bind(this);\r\n    }\r\n\r\n    pillChanged(evt) {\r\n        this.setState({[evt.target.name]: evt.target.checked});\r\n        localStorage.setItem(evt.target.name, evt.target.checked);\r\n    }\r\n\r\n    streamPill(icon, name, id){\r\n        return <li class=\"d-flex flex-row justify-content-between align-items-center p-2 border rounded-pill my-1\">\r\n                <div class=\"d-flex flex-row align-items-center\">\r\n                    <img class=\"rounded-circle\" src={icon} style={{width: '40px', height: '40px'}}/>\r\n                    <h5 class=\"m-0 ms-2\">{name}</h5>\r\n                </div>\r\n                <label class=\"switch m-0\">\r\n                    <input type=\"checkbox\" id={id+\"_enabled\"} name={id+\"_enabled\"} onChange={this.pillChanged} checked={this.state[id+\"_enabled\"]}/>\r\n                    <span class=\"slider round\"></span>\r\n                </label>\r\n            </li>\r\n    }\r\n\r\n    render(){\r\n        var content = <div>\r\n            <input type=\"text\" placeholder=\"Search\" class=\"form-control mb-2\"/>\r\n            <ul class=\"list-group\">\r\n                {Platforms.map(service => (\r\n                    <div>{this.streamPill(service.icon, service.title, service.id)}</div>\r\n                ))}\r\n            </ul>\r\n        </div>;\r\n        return <Settings content={content}/>\r\n    }\r\n\r\n}\r\n\r\nexport default Streams;","D:\\streamfinder\\client\\src\\validate.js",[],"D:\\streamfinder\\client\\src\\comps\\TitleDetails.js",["118","119","120"],"D:\\streamfinder\\client\\src\\pages\\Search.js",["121","122","123"],"D:\\streamfinder\\client\\src\\storage.js",[],"D:\\streamfinder\\client\\src\\comps\\TitlePreview.js",["124"],"D:\\streamfinder\\client\\src\\comps\\Footer.js",["125","126","127","128","129","130"],"D:\\streamfinder\\client\\src\\comps\\Settings.js",["131","132","133","134","135"],{"ruleId":"136","severity":1,"message":"137","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":16},{"ruleId":"136","severity":1,"message":"140","line":20,"column":8,"nodeType":"138","messageId":"139","endLine":20,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":9,"column":5,"nodeType":"143","messageId":"144","endLine":11,"endColumn":6},{"ruleId":"136","severity":1,"message":"145","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":48,"column":28,"nodeType":"148","messageId":"149","endLine":48,"endColumn":30},{"ruleId":"146","severity":1,"message":"150","line":50,"column":28,"nodeType":"148","messageId":"149","endLine":50,"endColumn":30},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"155","line":6,"column":7,"nodeType":"138","messageId":"139","endLine":6,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":25,"column":56,"nodeType":"148","messageId":"149","endLine":25,"endColumn":58},{"ruleId":"156","severity":1,"message":"157","line":45,"column":23,"nodeType":"158","endLine":45,"endColumn":79},{"ruleId":"159","severity":1,"message":"160","line":57,"column":29,"nodeType":"158","endLine":57,"endColumn":118},{"ruleId":"156","severity":1,"message":"157","line":76,"column":41,"nodeType":"158","endLine":76,"endColumn":215},{"ruleId":"151","replacedBy":"161"},{"ruleId":"153","replacedBy":"162"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":85,"column":28,"nodeType":"148","messageId":"149","endLine":85,"endColumn":30},{"ruleId":"146","severity":1,"message":"150","line":87,"column":28,"nodeType":"148","messageId":"149","endLine":87,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":8,"column":5,"nodeType":"143","messageId":"144","endLine":10,"endColumn":6},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":7,"column":5,"nodeType":"143","messageId":"144","endLine":9,"endColumn":6},{"ruleId":"136","severity":1,"message":"145","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":12,"column":31,"nodeType":"165","messageId":"166","endLine":12,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":13,"column":13,"nodeType":"169","endLine":13,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":27,"column":21,"nodeType":"158","endLine":27,"endColumn":101},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":14,"column":43,"nodeType":"165","messageId":"166","endLine":14,"endColumn":45},{"ruleId":"159","severity":1,"message":"160","line":23,"column":21,"nodeType":"158","endLine":23,"endColumn":101},{"ruleId":"136","severity":1,"message":"170","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":25,"column":28,"nodeType":"148","messageId":"149","endLine":25,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"170","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":6,"column":5,"nodeType":"143","messageId":"144","endLine":8,"endColumn":6},{"ruleId":"159","severity":1,"message":"160","line":16,"column":29,"nodeType":"158","endLine":16,"endColumn":118},{"ruleId":"156","severity":1,"message":"157","line":22,"column":25,"nodeType":"158","endLine":22,"endColumn":77},{"ruleId":"156","severity":1,"message":"157","line":25,"column":25,"nodeType":"158","endLine":25,"endColumn":77},{"ruleId":"136","severity":1,"message":"145","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":8,"column":5,"nodeType":"143","messageId":"144","endLine":10,"endColumn":6},{"ruleId":"146","severity":1,"message":"147","line":14,"column":38,"nodeType":"148","messageId":"149","endLine":14,"endColumn":40},{"ruleId":"146","severity":1,"message":"147","line":17,"column":38,"nodeType":"148","messageId":"149","endLine":17,"endColumn":40},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Settings' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Profiler' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-native-reassign",["171"],"no-negated-in-lhs",["172"],"'Storage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["171"],["172"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]