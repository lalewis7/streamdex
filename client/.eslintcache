[{"D:\\streamfinder\\client\\src\\App.js":"1","D:\\streamfinder\\client\\src\\pages\\NotFound\\NotFound.js":"2","D:\\streamfinder\\client\\src\\pages\\Title\\Title.js":"3","D:\\streamfinder\\client\\src\\comps\\LoginSignup\\SignupForm.js":"4","D:\\streamfinder\\client\\src\\util\\config.js":"5","D:\\streamfinder\\client\\src\\comps\\Series\\Series.js":"6","D:\\streamfinder\\client\\src\\comps\\TitleDetails.js":"7","D:\\streamfinder\\client\\src\\comps\\SignupSettings\\SignupSettings.js":"8","D:\\streamfinder\\client\\src\\comps\\HorizontalScrollable\\HorizontalScrollable.js":"9","D:\\streamfinder\\client\\src\\pages\\Search\\Search.js":"10","D:\\streamfinder\\client\\src\\comps\\Header\\Header.js":"11","D:\\streamfinder\\client\\src\\comps\\Settings\\Settings.js":"12","D:\\streamfinder\\client\\src\\comps\\Movie\\Movie.js":"13","D:\\streamfinder\\client\\src\\comps\\TitleStreamPopup\\TitleStreamPopup.js":"14","D:\\streamfinder\\client\\src\\comps\\Footer\\Footer.js":"15","D:\\streamfinder\\client\\src\\index.js":"16","D:\\streamfinder\\client\\src\\comps\\LoginSignup\\LoginSignup.js":"17","D:\\streamfinder\\client\\src\\pages\\Home\\Home.js":"18","D:\\streamfinder\\client\\src\\pages\\Test\\Test.js":"19","D:\\streamfinder\\client\\src\\util\\storage.js":"20","D:\\streamfinder\\client\\src\\comps\\Title.js":"21","D:\\streamfinder\\client\\src\\util\\utils.js":"22","D:\\streamfinder\\client\\src\\comps\\WatchNow\\WatchNow.js":"23","D:\\streamfinder\\client\\src\\comps\\StreamSettings\\StreamSettings.js":"24","D:\\streamfinder\\client\\src\\comps\\LoginSettings\\LoginSettings.js":"25","D:\\streamfinder\\client\\src\\comps\\UserSettings\\UserSettings.js":"26","D:\\streamfinder\\client\\src\\reportWebVitals.js":"27","D:\\streamfinder\\client\\src\\comps\\TitlePreview\\TitlePreview.js":"28","D:\\streamfinder\\client\\src\\comps\\TitlePreview.js":"29","D:\\streamfinder\\client\\src\\comps\\CountryFilterPopup\\CountryFilterPopup.js":"30","D:\\streamfinder\\client\\src\\util\\validate.js":"31","D:\\streamfinder\\client\\src\\comps\\Modal\\Modal.js":"32","D:\\streamfinder\\client\\src\\pages\\Discover\\Discover.js":"33","D:\\streamfinder\\client\\src\\util\\svg.js":"34","D:\\streamfinder\\client\\src\\comps\\Loading\\Loading.js":"35"},{"size":2362,"mtime":1626658323881,"results":"36","hashOfConfig":"37"},{"size":272,"mtime":1624390297353,"results":"38","hashOfConfig":"37"},{"size":5243,"mtime":1626933439401,"results":"39","hashOfConfig":"37"},{"size":9452,"mtime":1624391190568,"results":"40","hashOfConfig":"37"},{"size":56,"mtime":1624389622241,"results":"41","hashOfConfig":"37"},{"size":12172,"mtime":1626641498583,"results":"42","hashOfConfig":"37"},{"size":2708,"mtime":1622487396232,"results":"43","hashOfConfig":"37"},{"size":10589,"mtime":1626557233230,"results":"44","hashOfConfig":"37"},{"size":3006,"mtime":1626576238181,"results":"45","hashOfConfig":"37"},{"size":1793,"mtime":1626393872063,"results":"46","hashOfConfig":"37"},{"size":4672,"mtime":1626383244920,"results":"47","hashOfConfig":"37"},{"size":4811,"mtime":1626897998209,"results":"48","hashOfConfig":"37"},{"size":8462,"mtime":1626728987901,"results":"49","hashOfConfig":"37"},{"size":2495,"mtime":1626898111380,"results":"50","hashOfConfig":"37"},{"size":1127,"mtime":1626310799349,"results":"51","hashOfConfig":"37"},{"size":809,"mtime":1626812207188,"results":"52","hashOfConfig":"37"},{"size":6727,"mtime":1624392164238,"results":"53","hashOfConfig":"37"},{"size":1363,"mtime":1626557788572,"results":"54","hashOfConfig":"37"},{"size":1804,"mtime":1626575441530,"results":"55","hashOfConfig":"37"},{"size":1381,"mtime":1624991522484,"results":"56","hashOfConfig":"37"},{"size":2522,"mtime":1624390846491,"results":"57","hashOfConfig":"37"},{"size":844,"mtime":1626031844842,"results":"58","hashOfConfig":"37"},{"size":2148,"mtime":1625818726883,"results":"59","hashOfConfig":"37"},{"size":2978,"mtime":1626557345081,"results":"60","hashOfConfig":"37"},{"size":4669,"mtime":1626557233286,"results":"61","hashOfConfig":"37"},{"size":9867,"mtime":1626509905606,"results":"62","hashOfConfig":"37"},{"size":375,"mtime":1618938790153,"results":"63","hashOfConfig":"37"},{"size":1327,"mtime":1626641330939,"results":"64","hashOfConfig":"37"},{"size":1149,"mtime":1624390309227,"results":"65","hashOfConfig":"37"},{"size":5063,"mtime":1626898089634,"results":"66","hashOfConfig":"37"},{"size":360,"mtime":1624389614572,"results":"67","hashOfConfig":"37"},{"size":958,"mtime":1625116952180,"results":"68","hashOfConfig":"37"},{"size":1222,"mtime":1624390275312,"results":"69","hashOfConfig":"37"},{"size":13070,"mtime":1626726987496,"results":"70","hashOfConfig":"37"},{"size":902,"mtime":1626727511189,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"sifqvh",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\streamfinder\\client\\src\\App.js",["159"],"D:\\streamfinder\\client\\src\\pages\\NotFound\\NotFound.js",["160"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass NotFound extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>404 NotFound.js</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default NotFound;",["161","162"],"D:\\streamfinder\\client\\src\\pages\\Title\\Title.js",[],"D:\\streamfinder\\client\\src\\comps\\LoginSignup\\SignupForm.js",["163","164"],"import React from 'react';\r\nimport Config from '../../util/config.js';\r\n\r\nconst validate = require('../../util/validate.js');\r\n\r\n/**\r\n * Contains all inputs and labels for signup form\r\n * Used as child component for Login\r\n */\r\n class SignupForm extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // form data\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n\r\n            // input classes (bootstrap and design changes)\r\n            usernameClass: '',\r\n            emailClass: '',\r\n            passwordClass: '',\r\n            passwordConfirmClass: '',\r\n\r\n            // invalid messages\r\n            usernameInvalid: '',\r\n        }\r\n        // bind this\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.usernameChange = this.usernameChange.bind(this);\r\n        this.usernameValidate = this.usernameValidate.bind(this);\r\n        this.emailChange = this.emailChange.bind(this);\r\n        this.emailValidate = this.emailValidate.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n        this.passwordValidate = this.passwordValidate.bind(this);\r\n        this.passwordConfirmChange = this.passwordConfirmChange.bind(this);\r\n        // update parent\r\n        this.sendData();\r\n    }\r\n\r\n    /**\r\n     * Sends data to parent.\r\n     */\r\n    sendData = () => {\r\n        this.props.getData({\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            passwordConfirm: this.state.passwordConfirm\r\n        });\r\n    }\r\n\r\n    /**\r\n     * called from onChange and changes any input in the component state with name = value\r\n     * @param {Object} evt \r\n     */\r\n    handleChange (evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value }, () => {\r\n            this.sendData();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles changes to username input\r\n     * Checks if username is already taken\r\n     * @param {Object} evt \r\n     */\r\n    usernameChange (evt) {\r\n        // set value\r\n        this.setState({username: evt.target.value}, () => {\r\n            this.sendData();\r\n        });\r\n        // validate data\r\n        if (validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-valid\"});\r\n        // check if username is available\r\n        fetch(Config.API+\"handle/\"+evt.target.value)\r\n        .then(res => {\r\n            if (res.status == 200 && validate.username(evt.target.value))\r\n                this.setState({usernameClass: \"is-valid\"});\r\n            if (res.status != 200)\r\n                this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username already taken.\"});\r\n        }, \r\n        err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks if username is valid\r\n     * Used for onBlur event (input losses focus)\r\n     * @param {Object} evt \r\n     */\r\n    usernameValidate (evt) {\r\n        if (!validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username must be 4-32 characters long and only contain letters and digits.\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to email input\r\n     * @param {Object} evt \r\n     */\r\n    emailChange (evt) {\r\n        // set value\r\n        this.setState({email: evt.target.value}, () => {\r\n            this.sendData();\r\n        });\r\n        // email not required (no value is ok)\r\n        if (evt.target.value === \"\")\r\n            this.setState({emailClass: \"\"});\r\n        // validate email\r\n        if (validate.email(evt.target.value))\r\n            this.setState({emailClass: \"is-valid\"});\r\n    }\r\n\r\n    /**\r\n     * Checks if email is valid\r\n     * @param {Object} evt \r\n     */\r\n    emailValidate (evt) {\r\n        if (!validate.email(evt.target.value) && evt.target.value !== \"\")\r\n            this.setState({emailClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to password input\r\n     * @param {Object} evt \r\n     */\r\n    passwordChange(evt){\r\n        this.setState({password: evt.target.value}, () => {\r\n            this.sendData();\r\n        });\r\n        if (validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-valid\"})\r\n        if (!validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Checks if password is valid\r\n     * @param {Object} evt \r\n     */\r\n    passwordValidate (evt) {\r\n        console.log(\"here\");\r\n        if (!validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to confirm password change\r\n     * @param {Object} evt \r\n     */\r\n    passwordConfirmChange(evt){\r\n        // set value\r\n        this.setState({passwordConfirm: evt.target.value}, () => {\r\n            this.sendData();\r\n        });\r\n        // only set to not valid if value is more or equal characters\r\n        if (this.state.password !== evt.target.value && evt.target.value.length >= this.state.password.length)\r\n            this.setState({passwordConfirmClass: \"is-invalid\"});\r\n        else if (this.state.password === \"\")\r\n            this.setState({passwordConfirmClass: \"\"});\r\n        else if (this.state.password === evt.target.value)\r\n            this.setState({passwordConfirmClass: \"is-valid\"});\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-text\" >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\r\n                            </svg>\r\n                        </span>\r\n                        <input type=\"text\" class={\"form-control \"+this.state.usernameClass} id=\"signupUsername\" placeholder=\"Username\" value={this.state.username} onChange={this.usernameChange} onBlur={this.usernameValidate}/>\r\n                        <div class=\"invalid-feedback\">{this.state.usernameInvalid}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-text\" >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.15em\" height=\"1.15em\" fill=\"currentColor\" class=\"bi bi-envelope-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555zM0 4.697v7.104l5.803-3.558L0 4.697zM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757zm3.436-.586L16 11.801V4.697l-5.803 3.546z\"/>\r\n                            </svg>\r\n                        </span>\r\n                        <input type=\"email\" class={\"form-control \"+this.state.emailClass} id=\"signupEmail\" placeholder=\"Email\" value={this.state.email} onChange={this.emailChange} onBlur={this.emailValidate}/>\r\n                        <div class=\"invalid-feedback\">Email invalid.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-text\" >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.15em\" height=\"1.15em\" fill=\"currentColor\" class=\"bi bi-lock-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"/>\r\n                            </svg>\r\n                        </span>\r\n                        <input type=\"password\" class={\"form-control \"+this.state.passwordClass} id=\"signupPassword\" placeholder=\"Password\" value={this.state.password} onChange={this.passwordChange} onBlur={this.passwordValidate}/>\r\n                        <div class=\"invalid-feedback\">Password must be 8-64 characters long.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-text\" >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.15em\" height=\"1.15em\" fill=\"currentColor\" class=\"bi bi-lock-fill\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"/>\r\n                            </svg>\r\n                        </span>\r\n                        <input type=\"password\" class={\"form-control \"+this.state.passwordConfirmClass} id=\"signupPasswordConfirm\" placeholder=\"Confirm Password\" value={this.state.passwordConfirm} onChange={this.passwordConfirmChange} />\r\n                        <div class=\"invalid-feedback\">Passwords do not match.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default SignupForm;",["165","166"],"D:\\streamfinder\\client\\src\\util\\config.js",[],["167","168"],"D:\\streamfinder\\client\\src\\comps\\Series\\Series.js",["169","170","171","172","173","174","175","176","177"],"D:\\streamfinder\\client\\src\\comps\\TitleDetails.js",["178","179","180"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass TitleDetails extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.stream = this.stream.bind(this);\r\n    }\r\n\r\n    stream(data){\r\n        var icon = \"/baby.jpg\";\r\n        var title = data.platform;\r\n        this.props.platforms.map(platform => {\r\n            if (platform.id === data.platform){\r\n                icon = platform.icon;\r\n                title = platform.title;\r\n            }\r\n        })\r\n        return (\r\n            <div class=\"d-flex flex-row justify-content-between rounded-pill border p-1 px-2 mt-1 bg-white\">\r\n                <div class=\"d-flex flex-row align-items-center\">\r\n                    <img class=\"rounded-circle\" src={icon} style={{width: '40px', height: '40px'}}/>\r\n                    <div class=\"d-flex flex-column ms-2\">\r\n                        <div class=\"font-weight-boldd\">{title}</div>\r\n                        <div class=\"font-weight-light\">Free</div>\r\n                    </div>\r\n                </div>\r\n                <a href={data.link} class=\"m-1 align-self-center border rounded-pill align-items-center d-flex flex-row p-2 bg-light\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.75em\" height=\"1.75em\" fill=\"currentColor\" class=\"bi bi-play-circle\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                    <path d=\"M6.271 5.055a.5.5 0 0 1 .52.038l3.5 2.5a.5.5 0 0 1 0 .814l-3.5 2.5A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .271-.445z\"/>\r\n                    </svg>\r\n                    <div class=\"mx-1\">Watch</div>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            <div class=\"row m-0 mt-3\">\r\n                <h5>Available on</h5>\r\n                <div class=\"d-flex justify-content-row w-100 flex-column\" style={{borderRadius: '20px', overflowX: 'auto'}}>\r\n                    {this.props.links.map(stream => (\r\n                        <div>{this.stream(stream)}</div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div class=\"row m-0 mt-3 d-flex flex-column\">\r\n                <h5>Movie Information</h5>\r\n                <div>\r\n                    {this.props.tags.map(tag => {\r\n                        return <span class=\"badge rounded-pill bg-primary me-2\">{tag}</span>\r\n                    })}\r\n                </div>\r\n                <div class=\"mt-2\">\r\n                    <p class=\"m-0\">{this.props.description}</p>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TitleDetails;","D:\\streamfinder\\client\\src\\comps\\SignupSettings\\SignupSettings.js",["181","182"],"import React from 'react';\r\n\r\nconst Config = require('../../util/config.js');\r\nconst validate = require('../../util/validate.js');\r\nconst SVG = require('../../util/svg.js');\r\n\r\nclass SignupSettings extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // form data\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n\r\n            // input classes (bootstrap and design changes)\r\n            usernameClass: '',\r\n            emailClass: '',\r\n            passwordClass: '',\r\n            passwordConfirmClass: '',\r\n\r\n            // invalid messages\r\n            usernameInvalid: '',\r\n\r\n            loading: false,\r\n        }\r\n        // bind this\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.usernameChange = this.usernameChange.bind(this);\r\n        this.usernameValidate = this.usernameValidate.bind(this);\r\n        this.emailChange = this.emailChange.bind(this);\r\n        this.emailValidate = this.emailValidate.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n        this.passwordValidate = this.passwordValidate.bind(this);\r\n        this.passwordConfirmChange = this.passwordConfirmChange.bind(this);\r\n        this.signup = this.signup.bind(this);\r\n    }\r\n\r\n    /**\r\n     * called from onChange and changes any input in the component state with name = value\r\n     * @param {Object} evt \r\n     */\r\n    handleChange (evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n    }\r\n\r\n    /**\r\n     * Handles changes to username input\r\n     * Checks if username is already taken\r\n     * @param {Object} evt \r\n     */\r\n    usernameChange (evt) {\r\n        // set value\r\n        this.setState({username: evt.target.value});\r\n        // validate data\r\n        if (validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-valid\"});\r\n        // check if username is available\r\n        fetch(Config.API+\"handle/\"+evt.target.value)\r\n        .then(res => {\r\n            if (res.status == 200 && validate.username(evt.target.value))\r\n                this.setState({usernameClass: \"is-valid\"});\r\n            if (res.status != 200)\r\n                this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username already taken.\"});\r\n        }, \r\n        err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks if username is valid\r\n     * Used for onBlur event (input losses focus)\r\n     * @param {Object} evt \r\n     */\r\n    usernameValidate (evt) {\r\n        if (!validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username must be 4-32 characters long and only contain letters and digits.\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to email input\r\n     * @param {Object} evt \r\n     */\r\n    emailChange (evt) {\r\n        // set value\r\n        this.setState({email: evt.target.value});\r\n        // email not required (no value is ok)\r\n        if (evt.target.value === \"\")\r\n            this.setState({emailClass: \"\"});\r\n        // validate email\r\n        if (validate.email(evt.target.value))\r\n            this.setState({emailClass: \"is-valid\"});\r\n    }\r\n\r\n    /**\r\n     * Checks if email is valid\r\n     * @param {Object} evt \r\n     */\r\n    emailValidate (evt) {\r\n        if (!validate.email(evt.target.value) && evt.target.value !== \"\")\r\n            this.setState({emailClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to password input\r\n     * @param {Object} evt \r\n     */\r\n    passwordChange(evt){\r\n        this.setState({password: evt.target.value});\r\n        if (validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-valid\"})\r\n        if (!validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Checks if password is valid\r\n     * @param {Object} evt \r\n     */\r\n    passwordValidate (evt) {\r\n        if (!validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to confirm password change\r\n     * @param {Object} evt \r\n     */\r\n    passwordConfirmChange(evt){\r\n        // set value\r\n        this.setState({passwordConfirm: evt.target.value});\r\n        // only set to not valid if value is more or equal characters\r\n        if (this.state.password !== evt.target.value && evt.target.value.length >= this.state.password.length)\r\n            this.setState({passwordConfirmClass: \"is-invalid\"});\r\n        else if (this.state.password === \"\")\r\n            this.setState({passwordConfirmClass: \"\"});\r\n        else if (this.state.password === evt.target.value)\r\n            this.setState({passwordConfirmClass: \"is-valid\"});\r\n    }\r\n\r\n    /**\r\n     * Signup attempt for user\r\n     * @param {Object} evt \r\n     */\r\n     signup (evt) {\r\n        this.setState({loading: true});\r\n\r\n        evt.preventDefault();\r\n        // send post to create user\r\n        fetch(Config.API+\"users\", \r\n        {\r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({handle: this.state.username, email: this.state.email, \r\n                password: this.state.password})\r\n        })\r\n        .then(res => {\r\n            // successfully created user\r\n            if (res.ok)\r\n                // get token for newly created user\r\n                return fetch(Config.API+\"auth\",\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {'user': this.state.username, 'password': this.state.password}\r\n                })\r\n                .then(res => {\r\n                    if (res.ok){\r\n                        return res.text().then(token => {\r\n                            this.props.setToken(token);\r\n                            // remove login page\r\n                            this.props.setVisible(false);\r\n                        });\r\n                    } else {\r\n                        console.log('Failed to login after signup');\r\n                    }\r\n                },\r\n                err => {\r\n                    console.log(err);\r\n                });\r\n        }, err => {\r\n            console.log(err);\r\n        })\r\n        .finally(() => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let signupBtn = <button type=\"submit\" class=\"btn btn-primary\">SIGN UP</button>;\r\n        if (this.state.loading)\r\n            signupBtn = <>\r\n                <button type=\"submit\" class=\"btn btn-primary\">\r\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                </button>\r\n            </>\r\n        return <form onSubmit={this.signup}>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group has-validation\">\r\n                        <span class=\"input-group-text border-0 bg-highlight text-head2 shadow-none\" >\r\n                            <SVG.UserFill w={'1.15em'} h={'1.15em'}/>\r\n                        </span>\r\n                        <input type=\"text\" class={\"form-control border-0 bg-highlight text-head text-input \"+this.state.usernameClass} id=\"signupUsername\" placeholder=\"Username\" value={this.state.username} onChange={this.usernameChange} onBlur={this.usernameValidate}/>\r\n                        <div class=\"invalid-feedback\">{this.state.usernameInvalid}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group has-validation\">\r\n                        <span class=\"input-group-text border-0 bg-highlight text-head2 shadow-none\" >\r\n                            <SVG.EmailFill w={'1.15em'} h={'1.15em'} />\r\n                        </span>\r\n                        <input type=\"email\" class={\"form-control border-0 bg-highlight text-head text-input \"+this.state.emailClass} id=\"signupEmail\" placeholder=\"Email\" value={this.state.email} onChange={this.emailChange} onBlur={this.emailValidate}/>\r\n                        <div class=\"invalid-feedback\">Email invalid.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group has-validation\">\r\n                        <span class=\"input-group-text border-0 bg-highlight text-head2 shadow-none\" >\r\n                            <SVG.PasswordFill w={'1.15em'} h={'1.15em'} />\r\n                        </span>\r\n                        <input type=\"password\" class={\"form-control border-0 bg-highlight text-head text-input \"+this.state.passwordClass} id=\"signupPassword\" placeholder=\"Password\" value={this.state.password} onChange={this.passwordChange} onBlur={this.passwordValidate}/>\r\n                        <div class=\"invalid-feedback\">Password must be 8-64 characters long.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group has-validation\">\r\n                        <span class=\"input-group-text border-0 bg-highlight text-head2 shadow-none\" >\r\n                            <SVG.PasswordFill w={'1.15em'} h={'1.15em'} />\r\n                        </span>\r\n                        <input type=\"password\" class={\"form-control border-0 bg-highlight text-head text-input \"+this.state.passwordConfirmClass} id=\"signupPasswordConfirm\" placeholder=\"Confirm Password\" value={this.state.passwordConfirm} onChange={this.passwordConfirmChange} />\r\n                        <div class=\"invalid-feedback\">Passwords do not match.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12 d-grid\">\r\n                    {signupBtn}\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <p class=\"text-center mt-3 text-main\">\r\n                    Already a member?\r\n                    <a href=\"javacript:void(0);\" class=\"link-light ms-1\" onClick={() => {this.props.switchPage('login')}}>Login now</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n\r\n}\r\n\r\nexport default SignupSettings;","D:\\streamfinder\\client\\src\\comps\\HorizontalScrollable\\HorizontalScrollable.js",["183","184","185","186","187"],"D:\\streamfinder\\client\\src\\pages\\Search\\Search.js",["188","189","190","191"],"import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Footer from '../../comps/Footer/Footer.js';\r\nimport Config from '../../util/config.js';\r\n\r\nimport TitlePreview from '../../comps/TitlePreview/TitlePreview.js';\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass Search extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            titles: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        //let queries = queryString.parse(this.props.location.search);\r\n        fetch(Config.API + 'titles/' + this.props.location.search).then((res) => {\r\n            if (res.ok)\r\n                return res.json();\r\n        }).then((res) => {\r\n            this.setState({titles: res});\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(previousProps, previousState){\r\n        console.log(previousProps);\r\n        if (previousProps.location.search != this.props.location.search){\r\n            fetch(Config.API + 'titles/' + this.props.location.search).then((res) => {\r\n                if (res.ok)\r\n                    return res.json();\r\n            }).then((res) => {\r\n                this.setState({titles: res});\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            <div class=\"h-100 flex-grow-1\">\r\n                <div class=\"container pt-3 h-100 d-flex flex-column\">\r\n                    <div class=\"row g-3\">\r\n                        {this.state.titles.map(t => (\r\n                            <div class=\"col-lg-auto col-md-3 col-sm-4 col-auto\"><TitlePreview title={t} /></div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","D:\\streamfinder\\client\\src\\comps\\Header\\Header.js",["192","193"],"D:\\streamfinder\\client\\src\\comps\\Settings\\Settings.js",[],"D:\\streamfinder\\client\\src\\comps\\Movie\\Movie.js",["194","195","196","197","198","199","200"],"D:\\streamfinder\\client\\src\\comps\\TitleStreamPopup\\TitleStreamPopup.js",["201"],"D:\\streamfinder\\client\\src\\comps\\Footer\\Footer.js",["202","203","204","205","206"],"import React, { useState } from 'react';\r\n\r\nclass Footer extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <footer class=\"container-fluid\">\r\n                <div class=\"row p-3 justify-content-center\">\r\n                    <div class=\"col-auto navbar-dark\">\r\n                        <a class=\"\" href=\"/\">\r\n                            <img src=\"/streamlogo.png\" width=\"50\" height=\"50\" class=\"d-inline-block align-text-top\"/>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row justify-content-center p-3 pt-0\">\r\n                    <div class=\"col-6 border-end border-1 border-light d-flex justify-content-end\">\r\n                        <a class=\"text-decoration-none text-light\" href=\"#\">Contact Us</a>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <a class=\"text-decoration-none text-light\" href=\"#\">About</a>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","D:\\streamfinder\\client\\src\\index.js",["207"],"D:\\streamfinder\\client\\src\\comps\\LoginSignup\\LoginSignup.js",[],"D:\\streamfinder\\client\\src\\pages\\Home\\Home.js",["208","209"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Footer from '../../comps/Footer/Footer.js';\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div class=\"h-100 flex-grow-1\">\r\n                <div class=\"container h-100\">\r\n                    <div class=\"row h-100\">\r\n                        <div class=\"col\">\r\n                            <div class=\"row mt-5 mb-4\">\r\n                                <div class=\"col-md-10\">\r\n                                    <h3 class=\"display-3 fw-normal\">Discover new movies and shows from all your favorite streaming services</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col\">\r\n                                    <a href=\"/discover\">\r\n                                        <button type=\"button\" class=\"btn btn-lg btn-primary\">Discover now</button>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","D:\\streamfinder\\client\\src\\pages\\Test\\Test.js",["210","211","212"],"D:\\streamfinder\\client\\src\\util\\storage.js",[],"D:\\streamfinder\\client\\src\\comps\\Title.js",["213"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Config from '../util/config.js';\r\nimport TitlePreview from './TitlePreview.js';\r\nimport TitleDetails from './TitleDetails.js';\r\n\r\nimport platforms from '../util/platforms.json';\r\nimport sample_title from '../sample_data/title.json';\r\n\r\nclass Title extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        // use sample data for now\r\n        this.state = sample_title;\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (!this.props.id)\r\n            return;\r\n        fetch(Config.API+\"title/\"+this.props.id).then(res => {\r\n            if (res.ok)\r\n                return res.json();\r\n        }).then(data => {\r\n            console.log(data);\r\n            if (data)\r\n                this.setState(data);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state);\r\n        var details = <TitleDetails tags={this.state.tags} description={this.state.description} links={this.state.links} platforms={platforms}/>;\r\n        if (this.props.hide_details)\r\n            details = (\r\n                <div class=\"row\">\r\n                    <div class=\"col col-12\">\r\n                    <div id=\"titleDetailsCollapse\" class=\"collapse\">\r\n                        <TitleDetails tags={this.state.tags} description={this.state.description} links={this.state.links} platforms={platforms}/>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-center p-2 pb-0\">\r\n                        <button class=\"btn btn-outline-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#titleDetailsCollapse,#viewDetailsLess,#viewDetailsMore\" aria-expanded=\"true\" aria-controls=\"titleDetailsCollapse\">\r\n                            View <span id=\"viewDetailsMore\" class=\"collapse show\">More</span><span id=\"viewDetailsLess\" class=\"collapse\">Less</span>\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        return (\r\n            <>\r\n            <div class=\"card bg-light w-100\" style={{\"max-width\": \"767.98px\"}}>\r\n            <div class=\"card-body\">\r\n                <div class=\"container-fluid p-0\">\r\n                    <TitlePreview title={this.state.title} trailer={this.state.trailer} year={this.state.year} runtime={this.state.runtime} mpaa={this.state.mpaa} />\r\n                    {details}\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Title;","D:\\streamfinder\\client\\src\\util\\utils.js",[],"D:\\streamfinder\\client\\src\\comps\\WatchNow\\WatchNow.js",["214","215","216","217","218"],"import React from 'react';\r\nimport './WatchNow.css';\r\n\r\nconst Platforms = require('../../util/platforms.json');\r\nconst storage = require('../../util/storage.js');\r\nconst SVG = require('../../util/svg.js');\r\n\r\nclass WatchNow extends React.Component {\r\n\r\n    render(){\r\n\r\n        let links = [];\r\n\r\n        const streamIcon = (link, platform) => {\r\n            return <>\r\n            <button type=\"button\" class=\"btn p-0 m-2\" onClick={() => {this.props.openStream(link.platform)}}>\r\n                <img src={platform.icon} alt=\"...\" class=\"stream-icon rounded-3\"/>\r\n            </button>\r\n            </>\r\n        }\r\n\r\n        const noLinks = <>\r\n            <p class=\"p-3\">No streaming services are currently offering this title.</p>\r\n        </>\r\n\r\n        this.props.availability.map(available => {\r\n            if (storage.getFilterCountry())\r\n                for (let link of this.props.links)\r\n                    if (available.platform === link.platform && available.countries.indexOf(storage.getFilterCountry().toUpperCase()) == -1)\r\n                        return;\r\n            for (let platform of Platforms){\r\n                if (platform.id == available.platform){\r\n                    links.push(streamIcon(available, platform));\r\n                    return;\r\n                }\r\n            }\r\n        })\r\n\r\n        return <>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col\">\r\n                    <div class=\"d-flex flex-row justify-content-between align-items-top\">\r\n                        <h5 class=\"fw-bold\">WHERE TO WATCH</h5>\r\n                        <button type=\"button\" class=\"btn p-1 pt-0 shadow-none filter-streams-button\" onClick={() => {this.props.openFilter()}}>\r\n                            <span class=\"fw-bold pe-1 h6 m-0\">FILTER</span>\r\n                            <SVG.FilterFunnelFill w={24} h={24} />\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"pedestal\">\r\n                        {links.length > 0 ? links : noLinks}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default WatchNow;",["219","220"],"D:\\streamfinder\\client\\src\\comps\\StreamSettings\\StreamSettings.js",["221","222","223","224"],"import React from 'react';\r\nimport './StreamSettings.css';\r\n\r\nconst Platforms = require('../../util/platforms.json');\r\nvar Config = require('../../util/config.js');\r\n\r\nclass StreamSettings extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        Platforms.map(service => {\r\n            if (!this.props.user)\r\n                this.state[service.id+\"_enabled\"] = localStorage.getItem(service.id+\"_enabled\") !== null ? localStorage.getItem(service.id+\"_enabled\") === 'true' : false;\r\n            else\r\n                this.state[service.id+\"_enabled\"] = this.props.user.streams.indexOf(service.id) != -1;\r\n        });\r\n        this.streamPill = this.streamPill.bind(this);\r\n        this.pillChanged = this.pillChanged.bind(this);\r\n    }\r\n\r\n    pillChanged(evt) {\r\n        let selectedStreams = [];\r\n        for (let stream in this.state){\r\n            if ((evt.target.checked && this.state[stream]) || (!evt.target.checked && this.state[stream] && stream !== evt.target.name))\r\n                selectedStreams.push(stream.substring(0, stream.length-\"_enabled\".length));\r\n        }\r\n        if (evt.target.checked)\r\n            selectedStreams.push(evt.target.name.substring(0, evt.target.name.length-\"_enabled\".length));\r\n        \r\n        this.setState({[evt.target.name]: evt.target.checked});\r\n        if (!this.state.user)\r\n            localStorage.setItem(evt.target.name, evt.target.checked);\r\n        else\r\n            fetch(Config.API+\"users/\"+this.props.user.id, \r\n            {\r\n                method: 'PUT', \r\n                headers: { 'Content-Type': 'application/json', 'token': this.props.token },\r\n                body: JSON.stringify({streams: selectedStreams})\r\n            })\r\n    }\r\n\r\n    streamPill(icon, name, id){\r\n        return <li>\r\n            <label class=\"d-flex flex-row justify-content-between align-items-center p-2 rounded-3 my-1 settings-select stream-select-item\">\r\n                <div class=\"d-flex flex-row align-items-center\">\r\n                    <img class=\"rounded-circle\" src={icon} style={{width: '40px', height: '40px'}}/>\r\n                    <h5 class=\"m-0 ms-2 text-head\">{name}</h5>\r\n                </div>\r\n                <div class=\"form-check me-2\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" id={id+\"_enabled\"} name={id+\"_enabled\"} onChange={this.pillChanged} checked={this.state[id+\"_enabled\"]}/>\r\n                </div>\r\n            </label>\r\n            </li>\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            <div class=\"row\">\r\n                <div class=\"col pe-3\">\r\n                    <ul class=\"list-group list-unstyled\">\r\n                        {Platforms.map(service => (\r\n                            <div>{this.streamPill(service.icon, service.title, service.id)}</div>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default StreamSettings;","D:\\streamfinder\\client\\src\\comps\\LoginSettings\\LoginSettings.js",[],"D:\\streamfinder\\client\\src\\comps\\UserSettings\\UserSettings.js",["225","226","227"],"import React from 'react';\r\n\r\nvar Validate = require('../../util/validate.js');\r\nvar Config = require('../../util/config.js');\r\nconst SVG = require('../../util/svg.js');\r\n\r\nclass UserSettings extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            newPassword: \"\",\r\n            newPasswordConf: \"\",\r\n\r\n            usernameClass: \"\",\r\n            usernameInvalid: \"\",\r\n            emailClass: \"\",\r\n            newPasswordClass: \"\",\r\n            newPasswordConfClass: \"\",\r\n\r\n            responseMsg: <>An error occurred while saving changes.<br />Please try again later.</>,\r\n            responseMsgError: true,\r\n            responseMsgVisible: false,\r\n\r\n            loading: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.usernameChange = this.usernameChange.bind(this);\r\n        this.usernameValidate = this.usernameValidate.bind(this);\r\n        this.emailChange = this.emailChange.bind(this);\r\n        this.emailValidate = this.emailValidate.bind(this);\r\n        this.newPasswordChange = this.newPasswordChange.bind(this);\r\n        this.newPasswordValidate = this.newPasswordValidate.bind(this);\r\n        this.newPasswordConfChange = this.newPasswordConfChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    handleChange (evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n    }\r\n\r\n    usernameChange (evt) {\r\n        this.setState({username: evt.target.value});\r\n        if (Validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-valid\"});\r\n        fetch(Config.API+\"handle/\"+evt.target.value)\r\n        .then(res => {\r\n            if (res.status == 200 && Validate.username(evt.target.value))\r\n                this.setState({usernameClass: \"is-valid\"});\r\n            if (res.status != 200)\r\n                this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username already taken.\"});\r\n        }, \r\n        err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    usernameValidate (evt) {\r\n        if (!Validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username must be 4-32 characters long and only contain letters and digits.\"});\r\n    }\r\n\r\n    emailChange (evt) {\r\n        this.setState({email: evt.target.value});\r\n        if (evt.target.value === \"\")\r\n            this.setState({emailClass: \"\"});\r\n        else if (Validate.email(evt.target.value))\r\n            this.setState({emailClass: \"is-valid\"});\r\n        else\r\n            this.setState({emailClass: \"is-invalid\"});\r\n    }\r\n\r\n    emailValidate (evt) {\r\n        if (!Validate.email(evt.target.value) && evt.target.value !== \"\")\r\n            this.setState({emailClass: \"is-invalid\"});\r\n    }\r\n\r\n    newPasswordChange(evt) {\r\n        this.setState({newPassword: evt.target.value});\r\n        if (Validate.password(evt.target.value))\r\n            this.setState({newPasswordClass: \"is-valid\"})\r\n        if (!Validate.password(evt.target.value))\r\n            this.setState({newPasswordClass: \"is-invalid\"});\r\n    }\r\n\r\n    newPasswordValidate(evt){\r\n        if (!Validate.password(evt.target.value))\r\n            this.setState({newPasswordClass: \"is-invalid\"});\r\n    }\r\n\r\n    newPasswordConfChange(evt){\r\n        this.setState({newPasswordConf: evt.target.value});\r\n        if (this.state.newPassword !== evt.target.value && evt.target.value.length >= this.state.newPassword.length)\r\n            this.setState({newPasswordConfClass: \"is-invalid\"});\r\n        else if (this.state.newPassword === \"\")\r\n            this.setState({newPasswordConfClass: \"\"});\r\n        else if (this.state.newPassword === evt.target.value)\r\n            this.setState({newPasswordConfClass: \"is-valid\"});\r\n    }\r\n\r\n    submit(evt){\r\n        this.setState({loading: true, responseMsgVisible: false});\r\n        // do not submit form\r\n        evt.preventDefault();\r\n\r\n        let body = {handle: this.state.username, email: this.state.email};\r\n\r\n        // entered a password\r\n        if (this.state.newPassword || this.state.newPasswordConf){\r\n            if (this.state.newPassword && this.state.newPasswordConf){\r\n                if (this.state.newPassword === this.state.newPasswordConf){\r\n                    body.password = this.state.newPassword;\r\n                }\r\n                // passwords do not match\r\n                else {\r\n                    this.setState({responseMsg:<>New passwords do not match.</>, responseMsgError: true, responseMsgVisible: true});\r\n                }\r\n            } \r\n            // missing a password\r\n            else {\r\n                this.setState({responseMsg:<>Missing form for change password.</>, responseMsgError: true, responseMsgVisible: true});\r\n            }\r\n        }\r\n        fetch(Config.API+\"users/\"+this.props.user.id, \r\n        {\r\n            method: 'PUT', \r\n            headers: { 'Content-Type': 'application/json', 'token': this.props.token },\r\n            body: JSON.stringify(body)\r\n        })\r\n        .then(res => {\r\n            // successful credentials\r\n            if (res.ok){\r\n                return res.text().then(() => {\r\n                    this.setState({responseMsg:<>Changes saved successfully.</>, responseMsgError: false, responseMsgVisible: true});\r\n                });\r\n            }\r\n            // incorrect credentials\r\n            else{\r\n                this.setState({responseMsg:<>An error occurred while saving changes.<br />Please try again later.</>, responseMsgError: true, responseMsgVisible: true});\r\n            }\r\n        },\r\n        err => {\r\n            this.setState({responseMsg:<>An error occurred while saving changes.<br />Please try again later.</>, responseMsgError: true, responseMsgVisible: true});\r\n            console.log(err);\r\n        })\r\n        .finally(() => {\r\n            this.setState({loading: false});\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.props.user && !this.state.username && !this.state.email)\r\n            this.setState({username: this.props.user.handle, email: this.props.user.email});\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if (this.props.user && !this.state.username && !this.state.email)\r\n            this.setState({username: this.props.user.handle, email: this.props.user.email});\r\n    }\r\n\r\n    render(){\r\n        let responseMsgColor = \"text-danger\";\r\n        if (!this.state.responseMsgError)\r\n            responseMsgColor = \"text-success\";\r\n        let saveChangesBtn = <>\r\n            <button type=\"submit\" class=\"btn btn-primary float-right align-self-end justify-self-end\" >\r\n                Save Changes\r\n            </button>\r\n        </>\r\n        if (this.state.loading)\r\n            saveChangesBtn = <>\r\n                <button type=\"submit\" class=\"btn btn-primary float-right align-self-end justify-self-end\" >\r\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                </button>\r\n            </>\r\n        return <>\r\n            <div class=\"row\">\r\n                <div class=\"col pe-3\">\r\n                    <form onSubmit={this.submit} class=\"needs-validation\">\r\n                        <h4>User Information</h4>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"accUsername\" class=\"form-label\">Username</label>\r\n                            <input type=\"text\" class={\"form-control \"+this.state.usernameClass} id=\"accUsername\" placeholder=\"Username\" value={this.state.username} onChange={this.usernameChange} onBlur={this.usernameValidate}/>\r\n                            <div class=\"invalid-feedback\">{this.state.usernameInvalid}</div>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"accEmail\" class=\"form-label\">Email</label>\r\n                            <input type=\"email\" class={\"form-control \"+this.state.emailClass} id=\"accEmail\" placeholder=\"Email\" value={this.state.email} onChange={this.emailChange} onBlur={this.emailValidate}/>\r\n                            <div class=\"invalid-feedback\">Email invalid.</div>\r\n                        </div>\r\n                        <hr/>\r\n                        <h4>Change Password</h4>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"accPassword\" class=\"form-label\">New Password</label>\r\n                            <input type=\"password\" class={\"form-control \"+this.state.newPasswordClass} id=\"accPassword\" placeholder=\"New Password\" value={this.state.newPassword} onChange={this.newPasswordChange} onBlur={this.newPasswordValidate}/>\r\n                            <div class=\"invalid-feedback\">Password must be 8-64 characters long.</div>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"accPasswordConfirm\" class=\"form-label\">Confirm Password</label>\r\n                            <input type=\"password\" class={\"form-control \"+this.state.newPasswordConfClass} id=\"accPasswordConfirm\" placeholder=\"Confirm Password\" value={this.state.newPasswordConf} onChange={this.newPasswordConfChange} />\r\n                            <div class=\"invalid-feedback\">Passwords do not match.</div>\r\n                        </div>\r\n                        <div class=\"w-100 d-flex flex-row justify-content-between\">\r\n                            <span class={responseMsgColor+\" fs-7 align-self-start\"}>{this.state.responseMsgVisible ? this.state.responseMsg : ''}</span>\r\n                            {saveChangesBtn}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default UserSettings;","D:\\streamfinder\\client\\src\\reportWebVitals.js",[],"D:\\streamfinder\\client\\src\\comps\\TitlePreview\\TitlePreview.js",[],"D:\\streamfinder\\client\\src\\comps\\TitlePreview.js",["228"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nvar Utils = require('../util/utils.js');\r\n\r\nclass TitlePreview extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        console.log(this.props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            <div class=\"row\">\r\n                <div class=\"col\" style={{minWidth: '200px'}}>\r\n                    <h2>{this.props.title}</h2>\r\n                    <p><span class=\"badge bg-secondary\">{this.props.mpaa.toUpperCase()}</span> | {this.props.year} | {Utils.runtime(this.props.runtime)}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"ratio ratio-16x9\">\r\n                        <iframe src={\"https://www.youtube.com/embed/\"+this.props.trailer} title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TitlePreview;","D:\\streamfinder\\client\\src\\comps\\CountryFilterPopup\\CountryFilterPopup.js",["229","230","231"],"import React from 'react';\r\nimport './CountryFilterPopup.css';\r\nimport Modal from '../Modal/Modal.js';\r\n\r\nconst countryNames = require('../../util/countries.json');\r\nconst storage = require('../../util/storage.js');\r\n\r\nclass CountryFilterPopup extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: ''\r\n        }\r\n\r\n        this.search = this.search.bind(this);\r\n        this.filter = this.filter.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementById(\"country-filter-popup\").addEventListener('show.bs.modal', (event) => {\r\n            this.setState({search: ''});\r\n        });\r\n    }\r\n\r\n    search(evt){\r\n        this.setState({search: evt.target.value});\r\n    }\r\n\r\n    filter(country){\r\n        if (storage.getFilterCountry() && storage.getFilterCountry().toLowerCase() === country.toLowerCase())\r\n            storage.removeFilterCountry(); \r\n        else\r\n            storage.setFilterCountry(country.toLowerCase());\r\n        this.props.setVisible(false);\r\n    }\r\n\r\n    render(){\r\n        let selectedCountry;\r\n        if (storage.getFilterCountry())\r\n            for (let country of countryNames)\r\n                if (storage.getFilterCountry().toLowerCase() === country.code.toLowerCase()){\r\n                    selectedCountry = country;\r\n                    break;\r\n                }\r\n        \r\n        return <>\r\n            <Modal id=\"country-filter-popup\" show={this.props.show} setVisible={this.props.setVisible}>\r\n                <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-fullscreen-sm-down\">\r\n                    <div class=\"modal-content h-100\">\r\n                        <div class=\"modal-header\">\r\n                            <h3 class=\"ps-2 text-head\">Filter Countries</h3>\r\n                            <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div class=\"modal-body pt-1\">\r\n                            {selectedCountry ?  \r\n                            <>\r\n                            <div class=\"p-2 w-100 d-flex flex-row justify-content-start align-items-center\">\r\n                                <img src={\"flags/\"+selectedCountry.code.toLowerCase()+\".png\"} class=\"flag-icon rounded-2 m-1\" />\r\n                                <h4 class=\"m-0 ms-2\">{selectedCountry.name}</h4>\r\n                            </div>\r\n                            <hr/>\r\n                            </>\r\n                            : <p>No Country selected.</p>}\r\n                            <input class=\"form-control\" type=\"search\" placeholder=\"Search\" value={this.state.search} onChange={this.search}/>\r\n                            <ul class=\"d-flex flex-column p-0\">\r\n                                {countryNames.map((country) => {\r\n                                    let filtered = '', selected = 'd-none';\r\n                                    if (this.state.search && this.state.search.length > 0 && country.name.toLowerCase().indexOf(this.state.search.toLowerCase()) == -1)\r\n                                        filtered = 'd-none';\r\n                                    if (storage.getFilterCountry() && storage.getFilterCountry().toLowerCase() === country.code.toLowerCase())\r\n                                        selected = '';\r\n                                    return <li class={\"d-flex flex-row justify-content-between rounded-3 align-items-center mt-2 settings-select \" + filtered}>\r\n                                                <button class=\"btn p-2 w-100 d-flex flex-row justify-content-between align-items-center\" onClick={() => {this.filter(country.code)}}>\r\n                                                    <div>\r\n                                                        <img src={\"flags/\"+country.code.toLowerCase()+\".png\"} class=\"flag-icon rounded-2 m-1\" />\r\n                                                        <span class=\"ms-2 text-head\">{country.name}</span>\r\n                                                    </div>\r\n                                                    <div class={selected}>\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2em\" height=\"2em\" fill=\"currentColor\" class=\"bi bi-check\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"/>\r\n                                                        </svg>\r\n                                                    </div>\r\n                                                </button>\r\n                                            </li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default CountryFilterPopup;","D:\\streamfinder\\client\\src\\util\\validate.js",[],"D:\\streamfinder\\client\\src\\comps\\Modal\\Modal.js",[],"D:\\streamfinder\\client\\src\\pages\\Discover\\Discover.js",["232"],"D:\\streamfinder\\client\\src\\util\\svg.js",[],"D:\\streamfinder\\client\\src\\comps\\Loading\\Loading.js",[],{"ruleId":"233","severity":1,"message":"234","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":20},{"ruleId":"233","severity":1,"message":"237","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":81,"column":28,"nodeType":"244","messageId":"245","endLine":81,"endColumn":30},{"ruleId":"242","severity":1,"message":"246","line":83,"column":28,"nodeType":"244","messageId":"245","endLine":83,"endColumn":30},{"ruleId":"238","replacedBy":"247"},{"ruleId":"240","replacedBy":"248"},{"ruleId":"238","replacedBy":"249"},{"ruleId":"240","replacedBy":"250"},{"ruleId":"233","severity":1,"message":"251","line":9,"column":7,"nodeType":"235","messageId":"236","endLine":9,"endColumn":12},{"ruleId":"242","severity":1,"message":"243","line":38,"column":31,"nodeType":"244","messageId":"245","endLine":38,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":41,"column":29,"nodeType":"244","messageId":"245","endLine":41,"endColumn":31},{"ruleId":"242","severity":1,"message":"243","line":46,"column":36,"nodeType":"244","messageId":"245","endLine":46,"endColumn":38},{"ruleId":"252","severity":1,"message":"253","line":76,"column":33,"nodeType":"254","endLine":76,"endColumn":122},{"ruleId":"252","severity":1,"message":"253","line":83,"column":45,"nodeType":"254","endLine":83,"endColumn":132},{"ruleId":"252","severity":1,"message":"253","line":95,"column":45,"nodeType":"254","endLine":95,"endColumn":142},{"ruleId":"255","severity":1,"message":"256","line":130,"column":53,"nodeType":"254","endLine":130,"endColumn":203},{"ruleId":"242","severity":1,"message":"243","line":189,"column":71,"nodeType":"244","messageId":"245","endLine":189,"endColumn":73},{"ruleId":"233","severity":1,"message":"237","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":14,"column":43,"nodeType":"259","messageId":"260","endLine":14,"endColumn":45},{"ruleId":"252","severity":1,"message":"253","line":23,"column":21,"nodeType":"254","endLine":23,"endColumn":101},{"ruleId":"242","severity":1,"message":"243","line":63,"column":28,"nodeType":"244","messageId":"245","endLine":63,"endColumn":30},{"ruleId":"242","severity":1,"message":"246","line":65,"column":28,"nodeType":"244","messageId":"245","endLine":65,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":24,"column":20,"nodeType":"244","messageId":"245","endLine":24,"endColumn":22},{"ruleId":"242","severity":1,"message":"243","line":59,"column":23,"nodeType":"244","messageId":"245","endLine":59,"endColumn":25},{"ruleId":"242","severity":1,"message":"243","line":63,"column":35,"nodeType":"244","messageId":"245","endLine":63,"endColumn":37},{"ruleId":"233","severity":1,"message":"261","line":70,"column":26,"nodeType":"235","messageId":"236","endLine":70,"endColumn":30},{"ruleId":"233","severity":1,"message":"262","line":70,"column":38,"nodeType":"235","messageId":"236","endLine":70,"endColumn":42},{"ruleId":"233","severity":1,"message":"263","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"237","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"233","severity":1,"message":"264","line":9,"column":7,"nodeType":"235","messageId":"236","endLine":9,"endColumn":18},{"ruleId":"242","severity":1,"message":"246","line":32,"column":43,"nodeType":"244","messageId":"245","endLine":32,"endColumn":45},{"ruleId":"242","severity":1,"message":"243","line":26,"column":56,"nodeType":"244","messageId":"245","endLine":26,"endColumn":58},{"ruleId":"252","severity":1,"message":"253","line":53,"column":29,"nodeType":"254","endLine":53,"endColumn":118},{"ruleId":"242","severity":1,"message":"243","line":37,"column":31,"nodeType":"244","messageId":"245","endLine":37,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":40,"column":29,"nodeType":"244","messageId":"245","endLine":40,"endColumn":31},{"ruleId":"242","severity":1,"message":"243","line":45,"column":36,"nodeType":"244","messageId":"245","endLine":45,"endColumn":38},{"ruleId":"252","severity":1,"message":"253","line":89,"column":33,"nodeType":"254","endLine":89,"endColumn":122},{"ruleId":"252","severity":1,"message":"253","line":96,"column":45,"nodeType":"254","endLine":96,"endColumn":132},{"ruleId":"252","severity":1,"message":"253","line":108,"column":45,"nodeType":"254","endLine":108,"endColumn":142},{"ruleId":"242","severity":1,"message":"243","line":150,"column":71,"nodeType":"244","messageId":"245","endLine":150,"endColumn":73},{"ruleId":"252","severity":1,"message":"253","line":44,"column":41,"nodeType":"254","endLine":44,"endColumn":121},{"ruleId":"233","severity":1,"message":"263","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"265","severity":1,"message":"266","line":5,"column":5,"nodeType":"267","messageId":"268","endLine":7,"endColumn":6},{"ruleId":"252","severity":1,"message":"253","line":15,"column":29,"nodeType":"254","endLine":15,"endColumn":118},{"ruleId":"255","severity":1,"message":"269","line":21,"column":25,"nodeType":"254","endLine":21,"endColumn":77},{"ruleId":"255","severity":1,"message":"269","line":24,"column":25,"nodeType":"254","endLine":24,"endColumn":77},{"ruleId":"233","severity":1,"message":"270","line":15,"column":7,"nodeType":"235","messageId":"236","endLine":15,"endColumn":16},{"ruleId":"233","severity":1,"message":"237","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"265","severity":1,"message":"266","line":8,"column":5,"nodeType":"267","messageId":"268","endLine":10,"endColumn":6},{"ruleId":"233","severity":1,"message":"271","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":13},{"ruleId":"233","severity":1,"message":"272","line":4,"column":8,"nodeType":"235","messageId":"236","endLine":4,"endColumn":14},{"ruleId":"233","severity":1,"message":"273","line":10,"column":7,"nodeType":"235","messageId":"236","endLine":10,"endColumn":13},{"ruleId":"233","severity":1,"message":"237","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"257","severity":1,"message":"274","line":26,"column":47,"nodeType":"259","messageId":"275","endLine":26,"endColumn":49},{"ruleId":"242","severity":1,"message":"243","line":29,"column":135,"nodeType":"244","messageId":"245","endLine":29,"endColumn":137},{"ruleId":"257","severity":1,"message":"258","line":30,"column":25,"nodeType":"276","messageId":"277","endLine":30,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":32,"column":33,"nodeType":"244","messageId":"245","endLine":32,"endColumn":35},{"ruleId":"257","severity":1,"message":"258","line":34,"column":21,"nodeType":"276","messageId":"277","endLine":34,"endColumn":28},{"ruleId":"238","replacedBy":"278"},{"ruleId":"240","replacedBy":"279"},{"ruleId":"257","severity":1,"message":"258","line":12,"column":31,"nodeType":"259","messageId":"260","endLine":12,"endColumn":33},{"ruleId":"280","severity":1,"message":"281","line":14,"column":17,"nodeType":"282","endLine":14,"endColumn":27},{"ruleId":"242","severity":1,"message":"246","line":16,"column":97,"nodeType":"244","messageId":"245","endLine":16,"endColumn":99},{"ruleId":"252","severity":1,"message":"253","line":47,"column":21,"nodeType":"254","endLine":47,"endColumn":101},{"ruleId":"233","severity":1,"message":"283","line":5,"column":7,"nodeType":"235","messageId":"236","endLine":5,"endColumn":10},{"ruleId":"242","severity":1,"message":"243","line":50,"column":28,"nodeType":"244","messageId":"245","endLine":50,"endColumn":30},{"ruleId":"242","severity":1,"message":"246","line":52,"column":28,"nodeType":"244","messageId":"245","endLine":52,"endColumn":30},{"ruleId":"233","severity":1,"message":"237","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":60,"column":33,"nodeType":"254","endLine":60,"endColumn":129},{"ruleId":"242","severity":1,"message":"243","line":70,"column":162,"nodeType":"244","messageId":"245","endLine":70,"endColumn":164},{"ruleId":"252","severity":1,"message":"253","line":77,"column":57,"nodeType":"254","endLine":77,"endColumn":145},{"ruleId":"265","severity":1,"message":"266","line":6,"column":5,"nodeType":"267","messageId":"268","endLine":8,"endColumn":6},"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-native-reassign",["284"],"no-negated-in-lhs",["285"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["284"],["285"],["284"],["285"],"'Utils' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'dist' is assigned a value but never used.","'step' is assigned a value but never used.","'useState' is defined but never used.","'queryString' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'bootstrap' is assigned a value but never used.","'Movie' is defined but never used.","'Series' is defined but never used.","'series' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue",["284"],["285"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'SVG' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]