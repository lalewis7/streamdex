[{"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\reportWebVitals.js":"1","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\About\\About.js":"2","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Browse\\Browse.js":"3","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Title.js":"4","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\util\\svg.js":"5","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\List\\List.js":"6","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\TitleDetails.js":"7","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\StreamSettings\\StreamSettings.js":"8","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\LoginSettings\\LoginSettings.js":"9","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\WatchNow\\WatchNow.js":"10","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\CountryFilterPopup\\CountryFilterPopup.js":"11","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Header\\Header.js":"12","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Test\\Test.js":"13","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Popular\\Popular.js":"14","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Footer\\Footer.js":"15","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Movie\\Movie.js":"16","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\TitlePreview.js":"17","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\UserSettings\\UserSettings.js":"18","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Home\\Home.js":"19","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\New\\New.js":"20","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Settings\\Settings.js":"21","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\HorizontalScrollable\\HorizontalScrollable.js":"22","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\SignupSettings\\SignupSettings.js":"23","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\App.js":"24","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\util\\storage.js":"25","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Series\\Series.js":"26","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\NotFound\\NotFound.js":"27","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Loading\\Loading.js":"28","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\util\\validate.js":"29","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Title\\Title.js":"30","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Search\\Search.js":"31","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Modal\\Modal.js":"32","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\TitlePreview\\TitlePreview.js":"33","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Contact\\Contact.js":"34","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\index.js":"35","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\TitleStreamPopup\\TitleStreamPopup.js":"36","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\util\\utils.js":"37"},{"size":375,"mtime":1635917524207,"results":"38","hashOfConfig":"39"},{"size":7506,"mtime":1665085968627,"results":"40","hashOfConfig":"39"},{"size":1285,"mtime":1663268123932,"results":"41","hashOfConfig":"39"},{"size":2496,"mtime":1663268123938,"results":"42","hashOfConfig":"39"},{"size":13070,"mtime":1635917524210,"results":"43","hashOfConfig":"39"},{"size":807,"mtime":1661986275414,"results":"44","hashOfConfig":"39"},{"size":2708,"mtime":1635917524121,"results":"45","hashOfConfig":"39"},{"size":2946,"mtime":1663303988186,"results":"46","hashOfConfig":"39"},{"size":4637,"mtime":1663268123938,"results":"47","hashOfConfig":"39"},{"size":2148,"mtime":1635917524125,"results":"48","hashOfConfig":"39"},{"size":5060,"mtime":1663309950195,"results":"49","hashOfConfig":"39"},{"size":6747,"mtime":1663311935476,"results":"50","hashOfConfig":"39"},{"size":1804,"mtime":1635917524205,"results":"51","hashOfConfig":"39"},{"size":1287,"mtime":1663268123932,"results":"52","hashOfConfig":"39"},{"size":2499,"mtime":1665086484192,"results":"53","hashOfConfig":"39"},{"size":11275,"mtime":1663302989107,"results":"54","hashOfConfig":"39"},{"size":1149,"mtime":1635917524121,"results":"55","hashOfConfig":"39"},{"size":9850,"mtime":1663268123934,"results":"56","hashOfConfig":"39"},{"size":3269,"mtime":1635917524202,"results":"57","hashOfConfig":"39"},{"size":1279,"mtime":1663268123932,"results":"58","hashOfConfig":"39"},{"size":5055,"mtime":1663311935476,"results":"59","hashOfConfig":"39"},{"size":3582,"mtime":1635917524113,"results":"60","hashOfConfig":"39"},{"size":10585,"mtime":1663268123937,"results":"61","hashOfConfig":"39"},{"size":3048,"mtime":1663613502958,"results":"62","hashOfConfig":"39"},{"size":1381,"mtime":1635917524209,"results":"63","hashOfConfig":"39"},{"size":15075,"mtime":1663303050421,"results":"64","hashOfConfig":"39"},{"size":272,"mtime":1635917524203,"results":"65","hashOfConfig":"39"},{"size":902,"mtime":1635917524115,"results":"66","hashOfConfig":"39"},{"size":360,"mtime":1635917524210,"results":"67","hashOfConfig":"39"},{"size":5825,"mtime":1663311346594,"results":"68","hashOfConfig":"39"},{"size":1721,"mtime":1663268123932,"results":"69","hashOfConfig":"39"},{"size":958,"mtime":1635917524117,"results":"70","hashOfConfig":"39"},{"size":1358,"mtime":1663268123935,"results":"71","hashOfConfig":"39"},{"size":1621,"mtime":1664821182491,"results":"72","hashOfConfig":"39"},{"size":809,"mtime":1635917524200,"results":"73","hashOfConfig":"39"},{"size":2494,"mtime":1663309896025,"results":"74","hashOfConfig":"39"},{"size":844,"mtime":1635917524210,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1t546b7",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"83"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"91"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"83"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"83"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"83"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"83"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"83"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"83"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\reportWebVitals.js",[],["174","175"],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\About\\About.js",[],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Browse\\Browse.js",[],["176","177"],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Title.js",["178"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TitlePreview from './TitlePreview.js';\r\nimport TitleDetails from './TitleDetails.js';\r\n\r\nimport platforms from '../util/platforms.json';\r\nimport sample_title from '../sample_data/title.json';\r\n\r\nclass Title extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        // use sample data for now\r\n        this.state = sample_title;\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (!this.props.id)\r\n            return;\r\n        fetch(process.env.REACT_APP_API+\"title/\"+this.props.id).then(res => {\r\n            if (res.ok)\r\n                return res.json();\r\n        }).then(data => {\r\n            console.log(data);\r\n            if (data)\r\n                this.setState(data);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state);\r\n        var details = <TitleDetails tags={this.state.tags} description={this.state.description} links={this.state.links} platforms={platforms}/>;\r\n        if (this.props.hide_details)\r\n            details = (\r\n                <div class=\"row\">\r\n                    <div class=\"col col-12\">\r\n                    <div id=\"titleDetailsCollapse\" class=\"collapse\">\r\n                        <TitleDetails tags={this.state.tags} description={this.state.description} links={this.state.links} platforms={platforms}/>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-center p-2 pb-0\">\r\n                        <button class=\"btn btn-outline-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#titleDetailsCollapse,#viewDetailsLess,#viewDetailsMore\" aria-expanded=\"true\" aria-controls=\"titleDetailsCollapse\">\r\n                            View <span id=\"viewDetailsMore\" class=\"collapse show\">More</span><span id=\"viewDetailsLess\" class=\"collapse\">Less</span>\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        return (\r\n            <>\r\n            <div class=\"card bg-light w-100\" style={{\"max-width\": \"767.98px\"}}>\r\n            <div class=\"card-body\">\r\n                <div class=\"container-fluid p-0\">\r\n                    <TitlePreview title={this.state.title} trailer={this.state.trailer} year={this.state.year} runtime={this.state.runtime} mpaa={this.state.mpaa} />\r\n                    {details}\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Title;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\util\\svg.js",[],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\List\\List.js",[],["179","180"],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\TitleDetails.js",["181","182","183"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass TitleDetails extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.stream = this.stream.bind(this);\r\n    }\r\n\r\n    stream(data){\r\n        var icon = \"/baby.jpg\";\r\n        var title = data.platform;\r\n        this.props.platforms.map(platform => {\r\n            if (platform.id === data.platform){\r\n                icon = platform.icon;\r\n                title = platform.title;\r\n            }\r\n        })\r\n        return (\r\n            <div class=\"d-flex flex-row justify-content-between rounded-pill border p-1 px-2 mt-1 bg-white\">\r\n                <div class=\"d-flex flex-row align-items-center\">\r\n                    <img class=\"rounded-circle\" src={icon} style={{width: '40px', height: '40px'}}/>\r\n                    <div class=\"d-flex flex-column ms-2\">\r\n                        <div class=\"font-weight-boldd\">{title}</div>\r\n                        <div class=\"font-weight-light\">Free</div>\r\n                    </div>\r\n                </div>\r\n                <a href={data.link} class=\"m-1 align-self-center border rounded-pill align-items-center d-flex flex-row p-2 bg-light\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.75em\" height=\"1.75em\" fill=\"currentColor\" class=\"bi bi-play-circle\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                    <path d=\"M6.271 5.055a.5.5 0 0 1 .52.038l3.5 2.5a.5.5 0 0 1 0 .814l-3.5 2.5A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .271-.445z\"/>\r\n                    </svg>\r\n                    <div class=\"mx-1\">Watch</div>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            <div class=\"row m-0 mt-3\">\r\n                <h5>Available on</h5>\r\n                <div class=\"d-flex justify-content-row w-100 flex-column\" style={{borderRadius: '20px', overflowX: 'auto'}}>\r\n                    {this.props.links.map(stream => (\r\n                        <div>{this.stream(stream)}</div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div class=\"row m-0 mt-3 d-flex flex-column\">\r\n                <h5>Movie Information</h5>\r\n                <div>\r\n                    {this.props.tags.map(tag => {\r\n                        return <span class=\"badge rounded-pill bg-primary me-2\">{tag}</span>\r\n                    })}\r\n                </div>\r\n                <div class=\"mt-2\">\r\n                    <p class=\"m-0\">{this.props.description}</p>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TitleDetails;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\StreamSettings\\StreamSettings.js",["184","185","186","187"],"import React from 'react';\r\nimport './StreamSettings.css';\r\n\r\nconst Platforms = require('../../util/platforms.json');\r\n\r\nclass StreamSettings extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        Platforms.map(service => {\r\n            if (!this.props.user)\r\n                this.state[service.id+\"_enabled\"] = localStorage.getItem(service.id+\"_enabled\") !== null ? localStorage.getItem(service.id+\"_enabled\") === 'true' : false;\r\n            else\r\n                this.state[service.id+\"_enabled\"] = this.props.user.streams.indexOf(service.id) != -1;\r\n        });\r\n        this.streamPill = this.streamPill.bind(this);\r\n        this.pillChanged = this.pillChanged.bind(this);\r\n    }\r\n\r\n    pillChanged(evt) {\r\n        let selectedStreams = [];\r\n        for (let stream in this.state){\r\n            if ((evt.target.checked && this.state[stream]) || (!evt.target.checked && this.state[stream] && stream !== evt.target.name))\r\n                selectedStreams.push(stream.substring(0, stream.length-\"_enabled\".length));\r\n        }\r\n        if (evt.target.checked)\r\n            selectedStreams.push(evt.target.name.substring(0, evt.target.name.length-\"_enabled\".length));\r\n        \r\n        this.setState({[evt.target.name]: evt.target.checked});\r\n        if (!this.props.user)\r\n            localStorage.setItem(evt.target.name, evt.target.checked);\r\n        else\r\n            fetch(process.env.REACT_APP_API+\"users/\"+this.props.user.id, \r\n            {\r\n                method: 'PUT', \r\n                headers: { 'Content-Type': 'application/json', 'token': this.props.token },\r\n                body: JSON.stringify({streams: selectedStreams})\r\n            })\r\n    }\r\n\r\n    streamPill(icon, name, id){\r\n        return <li>\r\n            <label class=\"d-flex flex-row justify-content-between align-items-center p-2 rounded-3 my-1 settings-select stream-select-item\">\r\n                <div class=\"d-flex flex-row align-items-center\">\r\n                    <img class=\"rounded-circle\" src={icon} style={{width: '40px', height: '40px'}}/>\r\n                    <h5 class=\"m-0 ms-2 text-head\">{name}</h5>\r\n                </div>\r\n                <div class=\"form-check me-2\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" id={id+\"_enabled\"} name={id+\"_enabled\"} onChange={this.pillChanged} checked={this.state[id+\"_enabled\"]}/>\r\n                </div>\r\n            </label>\r\n            </li>\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            <div class=\"row\">\r\n                <div class=\"col pe-3\">\r\n                    <ul class=\"list-group list-unstyled\">\r\n                        {Platforms.map(service => (\r\n                            <div>{this.streamPill(service.icon, service.title, service.id)}</div>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default StreamSettings;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\LoginSettings\\LoginSettings.js",[],["188","189"],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\WatchNow\\WatchNow.js",["190","191","192","193","194"],"import React from 'react';\r\nimport './WatchNow.css';\r\n\r\nconst Platforms = require('../../util/platforms.json');\r\nconst storage = require('../../util/storage.js');\r\nconst SVG = require('../../util/svg.js');\r\n\r\nclass WatchNow extends React.Component {\r\n\r\n    render(){\r\n\r\n        let links = [];\r\n\r\n        const streamIcon = (link, platform) => {\r\n            return <>\r\n            <button type=\"button\" class=\"btn p-0 m-2\" onClick={() => {this.props.openStream(link.platform)}}>\r\n                <img src={platform.icon} alt=\"...\" class=\"stream-icon rounded-3\"/>\r\n            </button>\r\n            </>\r\n        }\r\n\r\n        const noLinks = <>\r\n            <p class=\"p-3\">No streaming services are currently offering this title.</p>\r\n        </>\r\n\r\n        this.props.availability.map(available => {\r\n            if (storage.getFilterCountry())\r\n                for (let link of this.props.links)\r\n                    if (available.platform === link.platform && available.countries.indexOf(storage.getFilterCountry().toUpperCase()) == -1)\r\n                        return;\r\n            for (let platform of Platforms){\r\n                if (platform.id == available.platform){\r\n                    links.push(streamIcon(available, platform));\r\n                    return;\r\n                }\r\n            }\r\n        })\r\n\r\n        return <>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col\">\r\n                    <div class=\"d-flex flex-row justify-content-between align-items-top\">\r\n                        <h5 class=\"fw-bold\">WHERE TO WATCH</h5>\r\n                        <button type=\"button\" class=\"btn p-1 pt-0 shadow-none filter-streams-button\" onClick={() => {this.props.openFilter()}}>\r\n                            <span class=\"fw-bold pe-1 h6 m-0\">FILTER</span>\r\n                            <SVG.FilterFunnelFill w={24} h={24} />\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"pedestal\">\r\n                        {links.length > 0 ? links : noLinks}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default WatchNow;",["195","196"],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\CountryFilterPopup\\CountryFilterPopup.js",["197","198","199"],"import React from 'react';\r\nimport './CountryFilterPopup.css';\r\nimport Modal from '../Modal/Modal.js';\r\n\r\nconst countryNames = require('../../util/countries.json');\r\nconst storage = require('../../util/storage.js');\r\n\r\nclass CountryFilterPopup extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: ''\r\n        }\r\n\r\n        this.search = this.search.bind(this);\r\n        this.filter = this.filter.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementById(\"country-filter-popup\").addEventListener('show.bs.modal', (event) => {\r\n            this.setState({search: ''});\r\n        });\r\n    }\r\n\r\n    search(evt){\r\n        this.setState({search: evt.target.value});\r\n    }\r\n\r\n    filter(country){\r\n        if (storage.getFilterCountry() && storage.getFilterCountry().toLowerCase() === country.toLowerCase())\r\n            storage.removeFilterCountry(); \r\n        else\r\n            storage.setFilterCountry(country.toLowerCase());\r\n        this.props.setVisible(false);\r\n    }\r\n\r\n    render(){\r\n        let selectedCountry;\r\n        if (storage.getFilterCountry())\r\n            for (let country of countryNames)\r\n                if (storage.getFilterCountry().toLowerCase() === country.code.toLowerCase()){\r\n                    selectedCountry = country;\r\n                    break;\r\n                }\r\n        \r\n        return <>\r\n            <Modal id=\"country-filter-popup\" show={this.props.show} setVisible={this.props.setVisible}>\r\n                <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-fullscreen-sm-down\">\r\n                    <div class=\"modal-content h-100\">\r\n                        <div class=\"modal-header\">\r\n                            <h3 class=\"ps-2 m-0 text-head\">Filter Countries</h3>\r\n                            <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            {selectedCountry ?  \r\n                            <>\r\n                            <div class=\"w-100 d-flex flex-row justify-content-start align-items-center\">\r\n                                <img src={\"/flags/\"+selectedCountry.code.toLowerCase()+\".svg\"} class=\"flag-icon rounded-2 m-1\" />\r\n                                <h4 class=\"m-0 ms-2\">{selectedCountry.name}</h4>\r\n                            </div>\r\n                            <hr/>\r\n                            </>\r\n                            : <p>No Country selected.</p>}\r\n                            <input class=\"form-control\" type=\"search\" placeholder=\"Search\" value={this.state.search} onChange={this.search}/>\r\n                            <ul class=\"d-flex flex-column p-0\">\r\n                                {countryNames.map((country) => {\r\n                                    let filtered = '', selected = 'd-none';\r\n                                    if (this.state.search && this.state.search.length > 0 && country.name.toLowerCase().indexOf(this.state.search.toLowerCase()) == -1)\r\n                                        filtered = 'd-none';\r\n                                    if (storage.getFilterCountry() && storage.getFilterCountry().toLowerCase() === country.code.toLowerCase())\r\n                                        selected = '';\r\n                                    return <li class={\"d-flex flex-row justify-content-between rounded-3 align-items-center mt-2 settings-select \" + filtered}>\r\n                                                <button class=\"btn p-2 w-100 d-flex flex-row justify-content-between align-items-center\" onClick={() => {this.filter(country.code)}}>\r\n                                                    <div>\r\n                                                        <img src={\"/flags/\"+country.code.toLowerCase()+\".svg\"} class=\"flag-icon rounded-3 m-1\" />\r\n                                                        <span class=\"ms-2 text-head\">{country.name}</span>\r\n                                                    </div>\r\n                                                    <div class={selected}>\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2em\" height=\"2em\" fill=\"currentColor\" class=\"bi bi-check\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"/>\r\n                                                        </svg>\r\n                                                    </div>\r\n                                                </button>\r\n                                            </li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default CountryFilterPopup;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Header\\Header.js",["200","201"],"import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nimport Settings from '../Settings/Settings.js';\r\n\r\nconst Storage = require('../../util/storage.js');\r\nconst SVG = require('../../util/svg.js');\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass Header extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            query: \"\",\r\n            showSettings: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.props.location.pathname.toLowerCase() == \"/search\")\r\n            this.setState({query: queryString.parse(this.props.location.search).q});\r\n    }\r\n\r\n    // https://medium.com/better-programming/handling-multiple-form-inputs-in-react-c5eb83755d15\r\n    handleChange (evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n    }\r\n\r\n    search(evt){\r\n        this.props.history.push(\"/search?q=\"+this.state.query);\r\n        evt.preventDefault();\r\n        this.props.search(this.state.query);\r\n    }\r\n\r\n    logout (evt) {\r\n        Storage.removeToken();\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            <Settings show={this.state.showSettings} setVisible={(val) => {this.setState({showSettings: val})}} setToken={this.props.setToken} \r\n                deleteToken={this.props.deleteToken} token={this.props.token} user={this.props.user} isLoginPrompted={this.props.isLoginPrompted} \r\n                loginPrompted={() => {this.setState({showSettings: true});this.props.loginPrompted();}} />\r\n            <div class=\"navbar-top-padding\">\r\n                <nav class=\"navbar navbar-dark navbar-expand-sm fixed-top bg-dark\">\r\n                    <div class=\"container-md\">\r\n                        <a class=\"navbar-brand\" href=\"/\">\r\n                            <img src=\"/streamdex-icon.svg\" width=\"32\" height=\"32\" class=\"d-inline-block align-text-top\"/>\r\n                            <span class=\"ps-2\">\r\n                            Streamdex\r\n                            </span>\r\n                        </a>\r\n                        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#headerCollapseContent\" aria-controls=\"headerCollapseContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span class=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div class=\"collapse navbar-collapse\">\r\n                            <ul class=\"navbar-nav me-auto mb-0\">\r\n                                <li class=\"nav-item\">\r\n                                    <a href=\"/browse\" class={window.location.pathname.toLowerCase() === '/browse' ? \"nav-link active\" : \"nav-link\"}>Browse</a>\r\n                                </li>\r\n                                <li class=\"nav-item\">\r\n                                    <a href=\"/new\" class={window.location.pathname.toLowerCase() === '/new' ? \"nav-link active\" : \"nav-link\"}>New</a>\r\n                                </li>\r\n                                <li class=\"nav-item\">\r\n                                    <a href=\"/popular\" class={window.location.pathname.toLowerCase() === '/popular' ? \"nav-link active\" : \"nav-link\"}>Popular</a>\r\n                                </li>\r\n                            </ul>\r\n                            <div class=\"d-flex w-100\">\r\n                                <form class=\"form-inline input-group px-2\" onSubmit={this.search}>\r\n                                    <input id=\"header-searchbar\" class=\"form-control\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" name=\"query\" value={this.state.query} onChange={this.handleChange} />\r\n                                    <button class=\"btn btn-secondary d-flex align-items-center\" type=\"submit\">\r\n                                        <SVG.Search w={'1em'} h={'1em'} />\r\n                                    </button>\r\n                                </form>\r\n                                <button class=\"p-1 ps-3 pe-2 nav-link btn dropdown-toggle d-flex align-items-center shadow-none\" onClick={() => {this.setState({showSettings: true})}}>\r\n                                    <SVG.SettingsGear w={'1.4em'} h={'1.4em'} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div class=\"collapse navbar-dark text-light p-2 fixed-top bg-dark header-mobile d-sm-none\" id=\"headerCollapseContent\" >\r\n                    <div class=\"d-flex flex-column\">\r\n                        <div class=\"d-flex flex-row\">\r\n                            <ul class=\"navbar-nav mb-2 flex-row justify-content-evenly w-100\">\r\n                                <li class=\"nav-item\">\r\n                                    <a href=\"/browse\" class={window.location.pathname.toLowerCase() === '/browse' ? \"nav-link active\" : \"nav-link\"}>Browse</a>\r\n                                </li>\r\n                                <li class=\"nav-item\">\r\n                                    <a href=\"/new\" class={window.location.pathname.toLowerCase() === '/new' ? \"nav-link active\" : \"nav-link\"}>New</a>\r\n                                </li>\r\n                                <li class=\"nav-item\">\r\n                                    <a href=\"/popular\" class={window.location.pathname.toLowerCase() === '/popular' ? \"nav-link active\" : \"nav-link\"}>Popular</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"d-flex flex-row\">\r\n                            <form class=\"form-inline input-group\" onSubmit={this.search}>\r\n                                <input class=\"form-control\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" name=\"query\" value={this.state.query} onChange={this.handleChange} />\r\n                                <button class=\"btn btn-secondary d-flex align-items-center\" type=\"submit\">\r\n                                    <SVG.Search w={'1.25em'} h={'1.25em'} />\r\n                                </button>\r\n                            </form>\r\n                            <button class=\"btn p-2 mx-2 nav-link d-flex align-items-center shadow-none\" onClick={() => {this.setState({showSettings: true})}}>\r\n                                <SVG.SettingsGear w={'1.65em'} h={'1.65em'} />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n           </>\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Test\\Test.js",["202","203","204"],"import React from 'react';\r\n\r\nimport Movie from '../../comps/Movie/Movie.js';\r\nimport Series from '../../comps/Series/Series.js';\r\nimport TitlePreview from '../../comps/TitlePreview/TitlePreview.js';\r\nimport HorizontalScrollable from '../../comps/HorizontalScrollable/HorizontalScrollable.js';\r\n\r\nconst titles = require('./titles_data.json');\r\nconst movie = require('./movie_data.json');\r\nconst series = require('./series_data.json');\r\nconst discover = require('./discover_data.json');\r\n\r\nclass Test extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            titles: titles,\r\n            movie: movie,\r\n            discover: discover\r\n        };\r\n\r\n    }\r\n\r\n    /*\r\n    render(){\r\n        return <>\r\n            <div class=\"container pt-3\">\r\n                <Series series={series} />\r\n            </div>\r\n        </>;\r\n    }\r\n    */\r\n\r\n    \r\n    render(){\r\n        console.log(this.state);\r\n        return <>\r\n            <div class=\"h-100\">\r\n                <div class=\"container-fluid px-5 h-100 d-flex flex-column\">\r\n                    {this.state.discover.map(cat => <>\r\n                        <div class=\"row mt-4 mb-1\">\r\n                            <h2>{cat.name}</h2>\r\n                        </div>\r\n                        <div class=\"row g-3\">\r\n                                <HorizontalScrollable>\r\n                                    <div class=\"d-flex\">\r\n                                    {cat.titles.map(title => <div class=\"mx-2\"><TitlePreview title={title}/></div>)}\r\n                                    </div>\r\n                                </HorizontalScrollable>\r\n                        </div>\r\n                    </>)}\r\n                </div>\r\n            </div>\r\n        </>;\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Test;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Popular\\Popular.js",[],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Footer\\Footer.js",["205","206","207"],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Movie\\Movie.js",["208","209","210","211","212","213","214","215","216","217"],"import React from 'react';\r\n\r\n// css\r\nimport \"./Movie.css\";\r\n\r\n// components\r\nimport WatchNow from '../WatchNow/WatchNow.js';\r\nimport TitleStreamPopup from '../TitleStreamPopup/TitleStreamPopup.js';\r\nimport CountryFilterPopup from '../CountryFilterPopup/CountryFilterPopup.js';\r\n\r\nconst Utils = require('../../util/utils.js');\r\nconst Platforms = require('../../util/platforms.json');\r\nconst SVG = require('../../util/svg.js');\r\n\r\nclass Movie extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            stream: {\r\n                countries: []\r\n            },\r\n            showFilterModal: false,\r\n            showStreamModal: false\r\n        }\r\n        this.open = false;\r\n\r\n        this.openStream = this.openStream.bind(this);\r\n        this.openFilter = this.openFilter.bind(this);\r\n    }\r\n\r\n    openStream(stream_id){\r\n        let content = {platform: stream_id};\r\n        for (let link of this.props.movie.links)\r\n            if (link.platform == stream_id)\r\n                content.link = link.link;\r\n        for (let platform of Platforms)\r\n            if (platform.id == stream_id){\r\n                content.title = platform.title;\r\n                content.icon = platform.icon;\r\n            }\r\n        for (let available of this.props.movie.availability)\r\n            if (available.platform == stream_id)\r\n                content.countries = available.countries;\r\n        this.setState({stream: content, showStreamModal: true});\r\n        this.open = true;\r\n    }\r\n\r\n    openFilter(){\r\n        this.setState({showFilterModal: true});\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props);\r\n        let genres = this.props.movie.genres;\r\n\r\n        let likeBtn = <button class=\"btn btn-outline-light px-3 py-2 lh-1 m-1\" onClick={() => {this.props.like()}}>\r\n            <SVG.ThumbsUpFill />\r\n        </button>\r\n        if (this.props.liked)\r\n            likeBtn = <button class=\"btn btn-success px-3 py-2 lh-1 m-1\" onClick={() => {this.props.like()}}>\r\n                <SVG.ThumbsUpFill />\r\n            </button>\r\n\r\n        let dislikeBtn = <button class=\"btn btn-outline-light px-3 py-2 lh-1 m-1\" onClick={() => {this.props.dislike()}}>\r\n            <SVG.ThumbsDownFill />\r\n        </button>\r\n        if (this.props.disliked)\r\n            dislikeBtn = <button class=\"btn btn-danger px-3 py-2 lh-1 m-1\" onClick={() => {this.props.dislike()}}>\r\n                <SVG.ThumbsDownFill />\r\n            </button>\r\n\r\n        let genreText = \"N/A\"\r\n        if (this.props.movie.genres.length > 0)\r\n            genreText = this.props.movie.genres.map((genre, i) => {\r\n                let val = genre.charAt(0).toUpperCase() + genre.slice(1) + \", \";\r\n                if (genres.indexOf(genre) == genres.length-1)\r\n                    val = val.slice(0, val.length-2);\r\n                return val;\r\n            });\r\n\r\n        return <>\r\n            <TitleStreamPopup stream={this.state.stream} show={this.state.showStreamModal} setVisible={(vis) => {this.setState({showStreamModal: vis})}} />\r\n            <CountryFilterPopup show={this.state.showFilterModal} setVisible={(vis) => {this.setState({showFilterModal: vis})}} />\r\n            <div class=\"container-fluid p-0\">\r\n                <div class=\"row p-2\">\r\n                    <civ class=\"d-none d-lg-block col-lg-4\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <img src={process.env.REACT_APP_API+\"images/\"+this.props.movie.thumbnail} alt=\"...\" class=\"w-100 rounded-top\" onError={(e) => console.log('error loading image')} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row pedestal rounded-bottom py-2 g-0\">\r\n                            <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                <img src=\"/streamdex-icon.svg\" width=\"28\" height=\"28\" class=\"d-inline-block align-text-top\"/>\r\n                                <h5 class=\"m-0 ms-1\">{this.props.movie.streamdex_rating ? this.props.movie.streamdex_rating+'%' : '0%'}</h5>\r\n                            </div>\r\n                            {this.props.movie.imdb_link ?\r\n                                <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                    <h5 class=\"mb-0\">\r\n                                        <a href={this.props.movie.imdb_link} class=\"d-flex flex-row align-items-center link-light\">\r\n                                            <img src=\"/imdblogo.png\" width=\"42\" height=\"18\" class=\"d-inline-block align-text-top\"/>\r\n                                            {this.props.movie.imdb_rating ? \r\n                                                <span class=\"ms-1\">{this.props.movie.imdb_rating}</span>\r\n                                            : ''}\r\n                                        </a>\r\n                                    </h5>\r\n                                </div>\r\n                            : ''}\r\n                            {this.props.movie.rotten_tomatoes_link ?\r\n                                <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                    <h5 class=\"mb-0\">\r\n                                        <a href={this.props.movie.rotten_tomatoes_link} class=\"d-flex flex-row align-items-center link-light\">\r\n                                            <img src=\"/rottentomatoeslogo.png\" width=\"24\" height=\"24\" class=\"d-inline-block align-text-top\"/>\r\n                                            {this.props.movie.rotten_tomatoes_rating ? \r\n                                                <span class=\"ms-1\">{this.props.movie.rotten_tomatoes_rating}</span>\r\n                                            : ''}\r\n                                        </a>\r\n                                    </h5>\r\n                                </div>\r\n                            : ''}\r\n                        </div>\r\n                    </civ>\r\n                    <div class=\"col-12 col-lg-8\">\r\n                        <div class=\"row mb-3\">\r\n                            <div class=\"col d-flex flex-row justify-content-between align-items-center\">\r\n                                <h2 class=\"text-head\">{this.props.movie.title}</h2>\r\n                                <div class=\"d-flex flex-row\">\r\n                                    {likeBtn}\r\n                                    {dislikeBtn}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {this.props.movie.trailer && this.props.movie.trailer.length > 0 ? \r\n                            <div class=\"row my-3\">\r\n                                <div class=\"col\">\r\n                                    <div class=\"ratio ratio-16x9\">\r\n                                        <iframe src={\"https://www.youtube.com/embed/\"+this.props.movie.trailer} title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; fullscreen\" allowfullscreen></iframe>\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                        : ''}\r\n                        <WatchNow availability={this.props.movie.availability} links={this.props.movie.links} openStream={this.openStream} openFilter={this.openFilter}/>\r\n                        <div class=\"row my-3\">\r\n                            <div class=\"col\">\r\n                                <h5 class=\"fw-bold\">DESCRIPTION</h5>\r\n                                <div>\r\n                                    <p>{this.props.movie.description && this.props.movie.description.length > 0 ? this.props.movie.description : 'No description available.'}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row my-3\">\r\n                            <div class=\"col\">\r\n                                <h5 class=\"text-head2 fw-bold\">DETAILS</h5>\r\n                                <div>\r\n                                    <p class=\"text-main\"><span class=\"fw-bold me-3\">Genres</span>{genreText}</p>\r\n                                    <p class=\"text-main\"><span class=\"fw-bold me-3\">Maturity</span>{this.props.movie.maturity && this.props.movie.maturity.length > 0 ? this.props.movie.maturity : 'N/A'}</p>\r\n                                    <p class=\"text-main\"><span class=\"fw-bold me-3\">Runtime</span>{this.props.movie.runtime ? Utils.runtime(this.props.movie.runtime) : 'N/A'}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row my-3 d-flex d-lg-none pedestal rounded-3 py-2 g-0\">\r\n                            <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                <img src=\"/streamdex-icon.svg\" width=\"28\" height=\"28\" class=\"d-inline-block align-text-top\"/>\r\n                                <h5 class=\"m-0 ms-1\">{this.props.movie.streamdex_rating ? this.props.movie.streamdex_rating+'%' : '0%'}</h5>\r\n                            </div>\r\n                            {this.props.movie.imdb_link ?\r\n                                <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                    <h5 class=\"mb-0\">\r\n                                        <a href={this.props.movie.imdb_link} class=\"d-flex flex-row align-items-center link-light\">\r\n                                            <img src=\"/imdblogo.png\" width=\"42\" height=\"18\" class=\"d-inline-block align-text-top\"/>\r\n                                            {this.props.movie.imdb_rating ? \r\n                                                <span class=\"ms-1\">{this.props.movie.imdb_rating}</span>\r\n                                            : ''}\r\n                                        </a>\r\n                                    </h5>\r\n                                </div>\r\n                            : ''}\r\n                            {this.props.movie.rotten_tomatoes_link ?\r\n                                <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                    <h5 class=\"mb-0\">\r\n                                        <a href={this.props.movie.rotten_tomatoes_link} class=\"d-flex flex-row align-items-center link-light\">\r\n                                            <img src=\"/rottentomatoeslogo.png\" width=\"24\" height=\"24\" class=\"d-inline-block align-text-top\"/>\r\n                                            {this.props.movie.rotten_tomatoes_rating ? \r\n                                                <span class=\"ms-1\">{this.props.movie.rotten_tomatoes_rating}</span>\r\n                                            : ''}\r\n                                        </a>\r\n                                    </h5>\r\n                                </div>\r\n                            : ''}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default Movie;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\TitlePreview.js",["218"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nvar Utils = require('../util/utils.js');\r\n\r\nclass TitlePreview extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        console.log(this.props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            <div class=\"row\">\r\n                <div class=\"col\" style={{minWidth: '200px'}}>\r\n                    <h2>{this.props.title}</h2>\r\n                    <p><span class=\"badge bg-secondary\">{this.props.mpaa.toUpperCase()}</span> | {this.props.year} | {Utils.runtime(this.props.runtime)}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"ratio ratio-16x9\">\r\n                        <iframe src={\"https://www.youtube.com/embed/\"+this.props.trailer} title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TitlePreview;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\UserSettings\\UserSettings.js",["219","220","221"],"import React from 'react';\r\n\r\nvar Validate = require('../../util/validate.js');\r\nconst SVG = require('../../util/svg.js');\r\n\r\nclass UserSettings extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            newPassword: \"\",\r\n            newPasswordConf: \"\",\r\n\r\n            usernameClass: \"\",\r\n            usernameInvalid: \"\",\r\n            emailClass: \"\",\r\n            newPasswordClass: \"\",\r\n            newPasswordConfClass: \"\",\r\n\r\n            responseMsg: <>An error occurred while saving changes.<br />Please try again later.</>,\r\n            responseMsgError: true,\r\n            responseMsgVisible: false,\r\n\r\n            loading: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.usernameChange = this.usernameChange.bind(this);\r\n        this.usernameValidate = this.usernameValidate.bind(this);\r\n        this.emailChange = this.emailChange.bind(this);\r\n        this.emailValidate = this.emailValidate.bind(this);\r\n        this.newPasswordChange = this.newPasswordChange.bind(this);\r\n        this.newPasswordValidate = this.newPasswordValidate.bind(this);\r\n        this.newPasswordConfChange = this.newPasswordConfChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    handleChange (evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n    }\r\n\r\n    usernameChange (evt) {\r\n        this.setState({username: evt.target.value});\r\n        if (Validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-valid\"});\r\n        fetch(process.env.REACT_APP_API+\"handle/\"+evt.target.value)\r\n        .then(res => {\r\n            if (res.status == 200 && Validate.username(evt.target.value))\r\n                this.setState({usernameClass: \"is-valid\"});\r\n            if (res.status != 200)\r\n                this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username already taken.\"});\r\n        }, \r\n        err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    usernameValidate (evt) {\r\n        if (!Validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username must be 4-32 characters long and only contain letters and digits.\"});\r\n    }\r\n\r\n    emailChange (evt) {\r\n        this.setState({email: evt.target.value});\r\n        if (evt.target.value === \"\")\r\n            this.setState({emailClass: \"\"});\r\n        else if (Validate.email(evt.target.value))\r\n            this.setState({emailClass: \"is-valid\"});\r\n        else\r\n            this.setState({emailClass: \"is-invalid\"});\r\n    }\r\n\r\n    emailValidate (evt) {\r\n        if (!Validate.email(evt.target.value) && evt.target.value !== \"\")\r\n            this.setState({emailClass: \"is-invalid\"});\r\n    }\r\n\r\n    newPasswordChange(evt) {\r\n        this.setState({newPassword: evt.target.value});\r\n        if (Validate.password(evt.target.value))\r\n            this.setState({newPasswordClass: \"is-valid\"})\r\n        if (!Validate.password(evt.target.value))\r\n            this.setState({newPasswordClass: \"is-invalid\"});\r\n    }\r\n\r\n    newPasswordValidate(evt){\r\n        if (!Validate.password(evt.target.value))\r\n            this.setState({newPasswordClass: \"is-invalid\"});\r\n    }\r\n\r\n    newPasswordConfChange(evt){\r\n        this.setState({newPasswordConf: evt.target.value});\r\n        if (this.state.newPassword !== evt.target.value && evt.target.value.length >= this.state.newPassword.length)\r\n            this.setState({newPasswordConfClass: \"is-invalid\"});\r\n        else if (this.state.newPassword === \"\")\r\n            this.setState({newPasswordConfClass: \"\"});\r\n        else if (this.state.newPassword === evt.target.value)\r\n            this.setState({newPasswordConfClass: \"is-valid\"});\r\n    }\r\n\r\n    submit(evt){\r\n        this.setState({loading: true, responseMsgVisible: false});\r\n        // do not submit form\r\n        evt.preventDefault();\r\n\r\n        let body = {handle: this.state.username, email: this.state.email};\r\n\r\n        // entered a password\r\n        if (this.state.newPassword || this.state.newPasswordConf){\r\n            if (this.state.newPassword && this.state.newPasswordConf){\r\n                if (this.state.newPassword === this.state.newPasswordConf){\r\n                    body.password = this.state.newPassword;\r\n                }\r\n                // passwords do not match\r\n                else {\r\n                    this.setState({responseMsg:<>New passwords do not match.</>, responseMsgError: true, responseMsgVisible: true});\r\n                }\r\n            } \r\n            // missing a password\r\n            else {\r\n                this.setState({responseMsg:<>Missing form for change password.</>, responseMsgError: true, responseMsgVisible: true});\r\n            }\r\n        }\r\n        fetch(process.env.REACT_APP_API+\"users/\"+this.props.user.id, \r\n        {\r\n            method: 'PUT', \r\n            headers: { 'Content-Type': 'application/json', 'token': this.props.token },\r\n            body: JSON.stringify(body)\r\n        })\r\n        .then(res => {\r\n            // successful credentials\r\n            if (res.ok){\r\n                return res.text().then(() => {\r\n                    this.setState({responseMsg:<>Changes saved successfully.</>, responseMsgError: false, responseMsgVisible: true});\r\n                });\r\n            }\r\n            // incorrect credentials\r\n            else{\r\n                this.setState({responseMsg:<>An error occurred while saving changes.<br />Please try again later.</>, responseMsgError: true, responseMsgVisible: true});\r\n            }\r\n        },\r\n        err => {\r\n            this.setState({responseMsg:<>An error occurred while saving changes.<br />Please try again later.</>, responseMsgError: true, responseMsgVisible: true});\r\n            console.log(err);\r\n        })\r\n        .finally(() => {\r\n            this.setState({loading: false});\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.props.user && !this.state.username && !this.state.email)\r\n            this.setState({username: this.props.user.handle, email: this.props.user.email});\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if (this.props.user && !this.state.username && !this.state.email)\r\n            this.setState({username: this.props.user.handle, email: this.props.user.email});\r\n    }\r\n\r\n    render(){\r\n        let responseMsgColor = \"text-danger\";\r\n        if (!this.state.responseMsgError)\r\n            responseMsgColor = \"text-success\";\r\n        let saveChangesBtn = <>\r\n            <button type=\"submit\" class=\"btn btn-primary float-right align-self-end justify-self-end\" >\r\n                Save Changes\r\n            </button>\r\n        </>\r\n        if (this.state.loading)\r\n            saveChangesBtn = <>\r\n                <button type=\"submit\" class=\"btn btn-primary float-right align-self-end justify-self-end\" >\r\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                </button>\r\n            </>\r\n        return <>\r\n            <div class=\"row\">\r\n                <div class=\"col pe-3\">\r\n                    <form onSubmit={this.submit} class=\"needs-validation\">\r\n                        <h4>User Information</h4>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"accUsername\" class=\"form-label\">Username</label>\r\n                            <input type=\"text\" class={\"form-control \"+this.state.usernameClass} id=\"accUsername\" placeholder=\"Username\" value={this.state.username} onChange={this.usernameChange} onBlur={this.usernameValidate}/>\r\n                            <div class=\"invalid-feedback\">{this.state.usernameInvalid}</div>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"accEmail\" class=\"form-label\">Email</label>\r\n                            <input type=\"email\" class={\"form-control \"+this.state.emailClass} id=\"accEmail\" placeholder=\"Email\" value={this.state.email} onChange={this.emailChange} onBlur={this.emailValidate}/>\r\n                            <div class=\"invalid-feedback\">Email invalid.</div>\r\n                        </div>\r\n                        <hr/>\r\n                        <h4>Change Password</h4>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"accPassword\" class=\"form-label\">New Password</label>\r\n                            <input type=\"password\" class={\"form-control \"+this.state.newPasswordClass} id=\"accPassword\" placeholder=\"New Password\" value={this.state.newPassword} onChange={this.newPasswordChange} onBlur={this.newPasswordValidate}/>\r\n                            <div class=\"invalid-feedback\">Password must be 8-64 characters long.</div>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"accPasswordConfirm\" class=\"form-label\">Confirm Password</label>\r\n                            <input type=\"password\" class={\"form-control \"+this.state.newPasswordConfClass} id=\"accPasswordConfirm\" placeholder=\"Confirm Password\" value={this.state.newPasswordConf} onChange={this.newPasswordConfChange} />\r\n                            <div class=\"invalid-feedback\">Passwords do not match.</div>\r\n                        </div>\r\n                        <div class=\"w-100 d-flex flex-row justify-content-between\">\r\n                            <span class={responseMsgColor+\" fs-7 align-self-start\"}>{this.state.responseMsgVisible ? this.state.responseMsg : ''}</span>\r\n                            {saveChangesBtn}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default UserSettings;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Home\\Home.js",["222"],"import React from 'react';\r\n\r\nimport Footer from '../../comps/Footer/Footer.js';\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div class=\"h-100 flex-grow-1\">\r\n                <div class=\"container my-5 mt-3\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-7 d-flex flex-column justify-content-center\">\r\n                            <h3 class=\"display-5 text-nunito-eb my-4 text-center text-md-start\">The ultimate streaming serivce guide.</h3>\r\n                            <h5 class=\"text-center text-md-start lh-base mb-4\">Browse and search where your favorite films and shows are available online.</h5>\r\n                            <div class=\"text-center text-md-start mb-4\">\r\n                                <a href=\"/browse\">\r\n                                    <button type=\"button\" class=\"btn btn-lg btn-primary\">Browse now</button>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-5 text-center\">\r\n                            <img src=\"./phone.png\" alt=\"...\" style={{maxWidth: '300px'}} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"bg-darker\">\r\n                    <div class=\"container py-4\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4 text-center\">\r\n                                <img class=\"streaming_services_img\" src=\"./streaming_services.png\" alt=\"\"/>\r\n                            </div>\r\n                            <div class=\"col-md-8 d-flex flex-column justify-content-center px-3\">\r\n                                <h3 class=\"text-nunito-eb text-center text-md-start\">Browse all your favorite streaming services from one spot.</h3>\r\n                                <h5 class=\"text-center text-md-start\">Browse and search Movies &#38; TV Shows from the top streaming services such as Netflix, Hulu, Disney+, Prime Video, and more!</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container my-5\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <h2 class=\"text-center display-6 text-nunito-eb fw-normal\">Search globally for titles.</h2>\r\n                            <h5 class=\"text-center lh-base\">\r\n                                Check which countries each streaming serivce offers their Movies &#38; TV Shows in. VPN users can connect through their VPN\r\n                                to gain access to geo-blocked content.\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row pt-5\">\r\n                        <div class=\"col text-center\">\r\n                            <img style={{maxWidth: '800px'}} src=\"./world_map.svg\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\New\\New.js",[],["223","224"],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Settings\\Settings.js",[],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\HorizontalScrollable\\HorizontalScrollable.js",["225","226","227","228"],"import React from 'react';\r\nimport { withResizeDetector } from 'react-resize-detector';\r\n\r\nconst SVG = require('../../util/svg.js');\r\n\r\n/* \r\nhttps://stackoverflow.com/questions/21064101/understanding-offsetwidth-clientwidth-scrollwidth-and-height-respectively\r\n*/\r\n\r\nclass HorizontalScrollable extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.scroll = React.createRef();\r\n\r\n        this.navigate = this.navigate.bind(this);\r\n        this.setNavigationVisibility = this.setNavigationVisibility.bind(this);\r\n    }\r\n\r\n    navigate(dir, speed, dist, step){\r\n        let body = this.scroll.current.querySelector('.horizontal-scroll-body');\r\n\r\n        let scrollAmount = 0;\r\n\r\n        let updateNav = this.setNavigationVisibility;\r\n\r\n        var slideTimer = setInterval(function(){\r\n            if(dir === 'left'){\r\n                body.scrollLeft -= step;\r\n            } else {\r\n                body.scrollLeft += step;\r\n            }\r\n            scrollAmount += step;\r\n            if(scrollAmount >= dist || body.scrollLeft == 0 || Math.floor(body.scrollLeft) == Math.floor(body.scrollWidth-body.clientWidth)){\r\n                updateNav();\r\n                window.clearInterval(slideTimer);\r\n            }\r\n        }, speed);\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener(\"resize\", this.setNavigationVisibility);\r\n        this.setNavigationVisibility();\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.setNavigationVisibility);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.setNavigationVisibility();\r\n    }\r\n\r\n    setNavigationVisibility(){\r\n        let scroll = this.scroll.current;\r\n        let body = scroll.querySelector('.horizontal-scroll-body');\r\n        if (body === null) return;\r\n        let prev = body.querySelector('.horizontal-scroll-prev');\r\n        let next = body.querySelector('.horizontal-scroll-next');\r\n\r\n        let scrollVal = body.scrollLeft;\r\n        let fullWidth = body.scrollWidth;\r\n        let viewportWidth = body.clientWidth;\r\n\r\n        if (scrollVal == 0 && prev)\r\n            prev.classList.add('d-none');\r\n        else if (prev)\r\n            prev.classList.remove('d-none');\r\n        \r\n        if (Math.floor(scrollVal) == Math.floor(fullWidth-viewportWidth) && next)\r\n            next.classList.add('d-none');\r\n        else if (next)\r\n            next.classList.remove('d-none');\r\n    }\r\n\r\n    render(){\r\n        const tot_time = 400;\r\n        const dist = (evt) => evt.currentTarget.parentElement.parentElement.clientWidth*.75;\r\n        const step = (evt) => Math.ceil(evt.currentTarget.parentElement.parentElement.clientWidth/64);\r\n        const speed = (evt) => Math.floor(tot_time / (dist(evt) / step(evt)));\r\n        const scroll = (dir, evt) => this.navigate(dir, speed(evt), dist(evt), step(evt));\r\n        return <>\r\n            <div class=\"horizontal-scroll\" ref={this.scroll}>\r\n                <div class=\"horizontal-scroll-body\">\r\n                    <button type=\"button\" class=\"horizontal-scroll-prev\" onClick={evt => scroll('left', evt)}>\r\n                        <SVG.CaretLeftFill w=\"1.2em\" h=\"1.2em\"/>\r\n                    </button>\r\n                    {this.props.children}\r\n                    <button type=\"button\" class=\"horizontal-scroll-next\" onClick={evt => scroll('right', evt)}>\r\n                        <SVG.CaretRightFill w=\"1.2em\" h=\"1.2em\"/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default withResizeDetector(HorizontalScrollable);","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\SignupSettings\\SignupSettings.js",["229","230"],"import React from 'react';\r\n\r\nconst validate = require('../../util/validate.js');\r\nconst SVG = require('../../util/svg.js');\r\n\r\nclass SignupSettings extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // form data\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n\r\n            // input classes (bootstrap and design changes)\r\n            usernameClass: '',\r\n            emailClass: '',\r\n            passwordClass: '',\r\n            passwordConfirmClass: '',\r\n\r\n            // invalid messages\r\n            usernameInvalid: '',\r\n\r\n            loading: false,\r\n        }\r\n        // bind this\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.usernameChange = this.usernameChange.bind(this);\r\n        this.usernameValidate = this.usernameValidate.bind(this);\r\n        this.emailChange = this.emailChange.bind(this);\r\n        this.emailValidate = this.emailValidate.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n        this.passwordValidate = this.passwordValidate.bind(this);\r\n        this.passwordConfirmChange = this.passwordConfirmChange.bind(this);\r\n        this.signup = this.signup.bind(this);\r\n    }\r\n\r\n    /**\r\n     * called from onChange and changes any input in the component state with name = value\r\n     * @param {Object} evt \r\n     */\r\n    handleChange (evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n    }\r\n\r\n    /**\r\n     * Handles changes to username input\r\n     * Checks if username is already taken\r\n     * @param {Object} evt \r\n     */\r\n    usernameChange (evt) {\r\n        // set value\r\n        this.setState({username: evt.target.value});\r\n        // validate data\r\n        if (validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-valid\"});\r\n        // check if username is available\r\n        fetch(process.env.REACT_APP_API+\"handle/\"+evt.target.value)\r\n        .then(res => {\r\n            if (res.status == 200 && validate.username(evt.target.value))\r\n                this.setState({usernameClass: \"is-valid\"});\r\n            if (res.status != 200)\r\n                this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username already taken.\"});\r\n        }, \r\n        err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks if username is valid\r\n     * Used for onBlur event (input losses focus)\r\n     * @param {Object} evt \r\n     */\r\n    usernameValidate (evt) {\r\n        if (!validate.username(evt.target.value))\r\n            this.setState({usernameClass: \"is-invalid\", usernameInvalid: \"Username must be 4-32 characters long and only contain letters and digits.\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to email input\r\n     * @param {Object} evt \r\n     */\r\n    emailChange (evt) {\r\n        // set value\r\n        this.setState({email: evt.target.value});\r\n        // email not required (no value is ok)\r\n        if (evt.target.value === \"\")\r\n            this.setState({emailClass: \"\"});\r\n        // validate email\r\n        if (validate.email(evt.target.value))\r\n            this.setState({emailClass: \"is-valid\"});\r\n    }\r\n\r\n    /**\r\n     * Checks if email is valid\r\n     * @param {Object} evt \r\n     */\r\n    emailValidate (evt) {\r\n        if (!validate.email(evt.target.value) && evt.target.value !== \"\")\r\n            this.setState({emailClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to password input\r\n     * @param {Object} evt \r\n     */\r\n    passwordChange(evt){\r\n        this.setState({password: evt.target.value});\r\n        if (validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-valid\"})\r\n        if (!validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Checks if password is valid\r\n     * @param {Object} evt \r\n     */\r\n    passwordValidate (evt) {\r\n        if (!validate.password(evt.target.value))\r\n            this.setState({passwordClass: \"is-invalid\"});\r\n    }\r\n\r\n    /**\r\n     * Handles changes to confirm password change\r\n     * @param {Object} evt \r\n     */\r\n    passwordConfirmChange(evt){\r\n        // set value\r\n        this.setState({passwordConfirm: evt.target.value});\r\n        // only set to not valid if value is more or equal characters\r\n        if (this.state.password !== evt.target.value && evt.target.value.length >= this.state.password.length)\r\n            this.setState({passwordConfirmClass: \"is-invalid\"});\r\n        else if (this.state.password === \"\")\r\n            this.setState({passwordConfirmClass: \"\"});\r\n        else if (this.state.password === evt.target.value)\r\n            this.setState({passwordConfirmClass: \"is-valid\"});\r\n    }\r\n\r\n    /**\r\n     * Signup attempt for user\r\n     * @param {Object} evt \r\n     */\r\n     signup (evt) {\r\n        this.setState({loading: true});\r\n\r\n        evt.preventDefault();\r\n        // send post to create user\r\n        fetch(process.env.REACT_APP_API+\"users\", \r\n        {\r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({handle: this.state.username, email: this.state.email, \r\n                password: this.state.password})\r\n        })\r\n        .then(res => {\r\n            // successfully created user\r\n            if (res.ok)\r\n                // get token for newly created user\r\n                return fetch(process.env.REACT_APP_API+\"auth\",\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {'user': this.state.username, 'password': this.state.password}\r\n                })\r\n                .then(res => {\r\n                    if (res.ok){\r\n                        return res.text().then(token => {\r\n                            this.props.setToken(token);\r\n                            // remove login page\r\n                            this.props.setVisible(false);\r\n                        });\r\n                    } else {\r\n                        console.log('Failed to login after signup');\r\n                    }\r\n                },\r\n                err => {\r\n                    console.log(err);\r\n                });\r\n        }, err => {\r\n            console.log(err);\r\n        })\r\n        .finally(() => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let signupBtn = <button type=\"submit\" class=\"btn btn-primary\">SIGN UP</button>;\r\n        if (this.state.loading)\r\n            signupBtn = <>\r\n                <button type=\"submit\" class=\"btn btn-primary\">\r\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                </button>\r\n            </>\r\n        return <form onSubmit={this.signup}>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group has-validation\">\r\n                        <span class=\"input-group-text border-0 bg-highlight text-head2 shadow-none\" >\r\n                            <SVG.UserFill w={'1.15em'} h={'1.15em'}/>\r\n                        </span>\r\n                        <input type=\"text\" class={\"form-control border-0 bg-highlight text-head text-input \"+this.state.usernameClass} id=\"signupUsername\" placeholder=\"Username\" value={this.state.username} onChange={this.usernameChange} onBlur={this.usernameValidate}/>\r\n                        <div class=\"invalid-feedback\">{this.state.usernameInvalid}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group has-validation\">\r\n                        <span class=\"input-group-text border-0 bg-highlight text-head2 shadow-none\" >\r\n                            <SVG.EmailFill w={'1.15em'} h={'1.15em'} />\r\n                        </span>\r\n                        <input type=\"email\" class={\"form-control border-0 bg-highlight text-head text-input \"+this.state.emailClass} id=\"signupEmail\" placeholder=\"Email\" value={this.state.email} onChange={this.emailChange} onBlur={this.emailValidate}/>\r\n                        <div class=\"invalid-feedback\">Email invalid.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group has-validation\">\r\n                        <span class=\"input-group-text border-0 bg-highlight text-head2 shadow-none\" >\r\n                            <SVG.PasswordFill w={'1.15em'} h={'1.15em'} />\r\n                        </span>\r\n                        <input type=\"password\" class={\"form-control border-0 bg-highlight text-head text-input \"+this.state.passwordClass} id=\"signupPassword\" placeholder=\"Password\" value={this.state.password} onChange={this.passwordChange} onBlur={this.passwordValidate}/>\r\n                        <div class=\"invalid-feedback\">Password must be 8-64 characters long.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row my-3\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"input-group has-validation\">\r\n                        <span class=\"input-group-text border-0 bg-highlight text-head2 shadow-none\" >\r\n                            <SVG.PasswordFill w={'1.15em'} h={'1.15em'} />\r\n                        </span>\r\n                        <input type=\"password\" class={\"form-control border-0 bg-highlight text-head text-input \"+this.state.passwordConfirmClass} id=\"signupPasswordConfirm\" placeholder=\"Confirm Password\" value={this.state.passwordConfirm} onChange={this.passwordConfirmChange} />\r\n                        <div class=\"invalid-feedback\">Passwords do not match.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12 d-grid\">\r\n                    {signupBtn}\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <p class=\"text-center mt-3 text-main\">\r\n                    Already a member?\r\n                    <a href=\"javacript:void(0);\" class=\"link-light ms-1\" onClick={() => {this.props.switchPage('login')}}>Login now</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n\r\n}\r\n\r\nexport default SignupSettings;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\App.js",["231"],"import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\r\n\r\n// components\r\nimport Header from './comps/Header/Header.js';\r\n\r\n// pages\r\nimport Home from './pages/Home/Home.js';\r\nimport Discover from './pages/Discover/Discover.js';\r\nimport NotFound from './pages/NotFound/NotFound.js';\r\nimport Search from './pages/Search/Search.js';\r\nimport Title from './pages/Title/Title.js';\r\nimport Test from './pages/Test/Test.js';\r\nimport About from './pages/About/About.js';\r\nimport Contact from './pages/Contact/Contact.js';\r\nimport New from './pages/New/New.js';\r\nimport Browse from './pages/Browse/Browse.js';\r\nimport Popular from './pages/Popular/Popular.js';\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      token: null,\r\n      user: null,\r\n      loginPrompted: false\r\n    }\r\n\r\n    this.setToken = this.setToken.bind(this);\r\n    this.deleteToken = this.deleteToken.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (sessionStorage.getItem('token'))\r\n      this.setToken(sessionStorage.getItem('token'));\r\n  }\r\n\r\n  setToken(token){\r\n    sessionStorage.setItem('token', token);\r\n    // update self info\r\n    fetch(process.env.REACT_APP_API+\"users/self\", {\r\n      method: 'GET',\r\n      headers: {'token': token}\r\n    })\r\n    .then(res => res.json())\r\n    .then(self => {\r\n      console.log(self);\r\n      this.setState({token: token, user: self});\r\n    })\r\n    .catch(err => {\r\n      this.deleteToken();\r\n    })\r\n  }\r\n\r\n  deleteToken(){\r\n    sessionStorage.removeItem('token');\r\n    this.setState({token: null, user: null});\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state.user);\r\n    return (<div id=\"app-main\" class=\"min-vh-100 d-flex flex-column bg-main\">\r\n      <BrowserRouter>\r\n        <Header search={() => {this.forceUpdate()}} token={this.state.token} setToken={this.setToken} deleteToken={this.deleteToken} user={this.state.user}\r\n          isLoginPrompted={this.state.loginPrompted} loginPrompted={() => {this.setState({loginPrompted: false})}} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/discover\" component={Discover} />\r\n          <Route path=\"/search\" component={Search} token={this.state.token} />\r\n          <Route path=\"/title/:id\" render={(props) => <Title {...props} token={this.state.token} user={this.state.user} \r\n            promptLogin={() => {this.setState({loginPrompted: true})}}/>} />\r\n          <Route path=\"/about\" component={About}/>\r\n          <Route path=\"/contact\" component={Contact}/>\r\n          <Route path=\"/browse\" component={Browse}/>\r\n          <Route path=\"/new\" component={New}/>\r\n          <Route path=\"/popular\" component={Popular}/>\r\n          <Route path=\"/test\" component={Test} />\r\n          <Route render={() => <NotFound/>} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>);\r\n  }\r\n\r\n}\r\n\r\nfunction AppExport() {\r\n\r\n  return (\r\n    <>\r\n      <App />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppExport;\r\n","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\util\\storage.js",[],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Series\\Series.js",["232","233","234","235","236","237","238","239","240","241","242","243"],"import React from 'react';\r\n\r\n// components\r\nimport WatchNow from '../WatchNow/WatchNow.js';\r\nimport TitleStreamPopup from '../TitleStreamPopup/TitleStreamPopup.js';\r\nimport CountryFilterPopup from '../CountryFilterPopup/CountryFilterPopup.js';\r\nimport HorizontalScrollable from '../HorizontalScrollable/HorizontalScrollable.js';\r\n\r\nconst Utils = require('../../util/utils.js');\r\nconst Platforms = require('../../util/platforms.json');\r\nconst SVG = require('../../util/svg.js');\r\n\r\nclass Series extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            stream: {\r\n                countries: []\r\n            },\r\n            season: 1,\r\n            showFilterModal: false,\r\n            showStreamModal: false\r\n        }\r\n        this.open = false;\r\n\r\n        this.openStream = this.openStream.bind(this);\r\n        this.openFilter = this.openFilter.bind(this);\r\n        this.switchSeason = this.switchSeason.bind(this);\r\n    }\r\n\r\n    openStream(stream_id, availability){\r\n        console.log(availability);\r\n        let content = {platform: stream_id};\r\n        for (let link of this.props.series.links)\r\n            if (link.platform == stream_id)\r\n                content.link = link.link;\r\n        for (let platform of Platforms)\r\n            if (platform.id == stream_id){\r\n                content.title = platform.title;\r\n                content.icon = platform.icon;\r\n            }\r\n        for (let available of availability)\r\n            if (available.platform == stream_id)\r\n                content.countries = available.countries;\r\n        this.setState({stream: content, showStreamModal: true});\r\n        this.open = true;\r\n    }\r\n\r\n    openFilter(){\r\n        this.setState({showFilterModal: true});\r\n    }\r\n\r\n    switchSeason(season){\r\n        this.setState({season: season});\r\n    }\r\n\r\n    render(){\r\n        let genres = this.props.series.genres;\r\n        let season = this.props.series.seasons[this.state.season-1];\r\n\r\n        let likeBtn = <button class=\"btn btn-outline-light px-3 py-2 lh-1 m-1\" onClick={() => {this.props.like()}}>\r\n            <SVG.ThumbsUpFill />\r\n        </button>\r\n        if (this.props.liked)\r\n            likeBtn = <button class=\"btn btn-success px-3 py-2 lh-1 m-1\" onClick={() => {this.props.like()}}>\r\n                <SVG.ThumbsUpFill />\r\n            </button>\r\n\r\n        let dislikeBtn = <button class=\"btn btn-outline-light px-3 py-2 lh-1 m-1\" onClick={() => {this.props.dislike()}}>\r\n            <SVG.ThumbsDownFill />\r\n        </button>\r\n        if (this.props.disliked)\r\n            dislikeBtn = <button class=\"btn btn-danger px-3 py-2 lh-1 m-1\" onClick={() => {this.props.dislike()}}>\r\n                <SVG.ThumbsDownFill />\r\n            </button>\r\n\r\n        let genreText = \"N/A\"\r\n        if (genres.length > 0)\r\n            genreText = genres.map((genre, i) => {\r\n                let val = genre.charAt(0).toUpperCase() + genre.slice(1) + \", \";\r\n                if (genres.indexOf(genre) == genres.length-1)\r\n                    val = val.slice(0, val.length-2);\r\n                return val;\r\n            });\r\n\r\n        return <>\r\n            <TitleStreamPopup stream={this.state.stream} show={this.state.showStreamModal} setVisible={(vis) => {this.setState({showStreamModal: vis})}} />\r\n            <CountryFilterPopup show={this.state.showFilterModal} setVisible={(vis) => {this.setState({showFilterModal: vis})}} />\r\n            <div class=\"container-fluid p-0\">\r\n                <div class=\"row p-2\">\r\n                    <civ class=\"d-none d-lg-block col-lg-4\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <img src={process.env.REACT_APP_API+\"images/\"+this.props.series.thumbnail} alt=\"...\" class=\"w-100 rounded-top\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row pedestal rounded-bottom py-2 g-0\">\r\n                            <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                <img src=\"/streamdex-icon.svg\" width=\"28\" height=\"28\" class=\"d-inline-block align-text-top\"/>\r\n                                <h5 class=\"m-0 ms-1\">{this.props.series.streamdex_rating ? this.props.series.streamdex_rating+'%' : '0%'}</h5>\r\n                            </div>\r\n                            {this.props.series.imdb_link ?\r\n                                <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                    <h5 class=\"mb-0\">\r\n                                        <a href={this.props.series.imdb_link} class=\"d-flex flex-row align-items-center link-light\">\r\n                                            <img src=\"/imdblogo.png\" width=\"42\" height=\"18\" class=\"d-inline-block align-text-top\"/>\r\n                                            {this.props.series.imdb_rating ? \r\n                                                <span class=\"ms-1\">{this.props.series.imdb_rating}</span>\r\n                                            : ''}\r\n                                        </a>\r\n                                    </h5>\r\n                                </div>\r\n                            : ''}\r\n                            {this.props.series.rotten_tomatoes_link ?\r\n                                <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                    <h5 class=\"mb-0\">\r\n                                        <a href={this.props.series.rotten_tomatoes_link} class=\"d-flex flex-row align-items-center link-light\">\r\n                                            <img src=\"/rottentomatoeslogo.png\" width=\"24\" height=\"24\" class=\"d-inline-block align-text-top\"/>\r\n                                            {this.props.series.rotten_tomatoes_rating ? \r\n                                                <span class=\"ms-1\">{this.props.series.rotten_tomatoes_rating}</span>\r\n                                            : ''}\r\n                                        </a>\r\n                                    </h5>\r\n                                </div>\r\n                            : ''}\r\n                        </div>\r\n                    </civ>\r\n                    <div class=\"col-12 col-lg-8\">\r\n                        <div class=\"row mb-3\">\r\n                            <div class=\"col d-flex flex-row justify-content-between align-items-center\">\r\n                                <h2 class=\"text-head\">{this.props.series.title}</h2>\r\n                                <div class=\"d-flex flex-row\">\r\n                                    {likeBtn}\r\n                                    {dislikeBtn}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row my-3\">\r\n                            {this.props.series.seasons.length > 0 ?\r\n                            <div class=\"col\">\r\n                                <HorizontalScrollable>\r\n                                    <ul class=\"nav nav-tabs\">\r\n                                        {this.props.series.seasons.map(s => {\r\n                                            return <>\r\n                                                <li class=\"nav-item\">\r\n                                                    <a class={\"btn nav-link text-nowrap \" + (s.season_number === this.state.season ? 'active' : '')} onClick={() => {this.switchSeason(s.season_number)}}>Season {s.season_number}</a>\r\n                                                </li>\r\n                                            </>\r\n                                        })}\r\n                                        <div class=\"flex-grow-1\"></div>\r\n                                    </ul>\r\n                                </HorizontalScrollable>\r\n                                <div class=\"rounded-bottom\">\r\n                                    {season.trailer && season.trailer.length > 0 ? \r\n                                        <div class=\"row my-3\">\r\n                                            <div class=\"col\">\r\n                                                <div class=\"ratio ratio-16x9\">\r\n                                                    <iframe src={\"https://www.youtube.com/embed/\"+season.trailer} title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; fullscreen\" allowfullscreen></iframe>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                    : ''}\r\n                                    <WatchNow availability={season.availability} links={this.props.series.links} openStream={(stream_id) => {this.openStream(stream_id, season.availability)}} openFilter={this.openFilter}/>\r\n                                    <div class=\"row my-3\">\r\n                                        <div class=\"col\">\r\n                                            <h5 class=\"text-head2 fw-bold\">EPISODES</h5>\r\n                                            <div class=\"accordion accordion-flush\" id=\"episodes-accordion\">\r\n                                                {season.episodes.map(episode => {\r\n                                                    return <>\r\n                                                        <div class=\"accordion-item\">\r\n                                                            <h2 id={'#episode-'+episode.episode_number+'-header'} class=\"accordion-header\">\r\n                                                                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target={'#episode-'+episode.episode_number} aria-expanded=\"false\" aria-controls={'episode-'+episode.episode_number}>\r\n                                                                    <span class=\"fw-bold me-3\">S{season.season_number}E{episode.episode_number} </span> {episode.name}\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                            <div id={'episode-'+episode.episode_number} class=\"accordion-collapse collapse\" aria-labelledby={'episode-'+episode.episode_number+'-header'} data-bs-parent=\"#episodes-accordion\">\r\n                                                                <div class=\"accordion-body\">\r\n                                                                    <p>{episode.description}</p>\r\n                                                                    <WatchNow availability={episode.availability} links={this.props.series.links} openStream={(stream_id) => {this.openStream(stream_id, episode.availability)}} openFilter={this.openFilter} />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </>\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            : ''\r\n                            }\r\n                        </div>\r\n                        <div class=\"row my-3\">\r\n                            <div class=\"col\">\r\n                                <h5 class=\"text-head2 fw-bold\">DESCRIPTION</h5>\r\n                                <div>\r\n                                    <p class=\"text-main\">{this.props.series.description}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row my-3\">\r\n                            <div class=\"col\">\r\n                                <h5 class=\"text-head2 fw-bold\">DETAILS</h5>\r\n                                <div>\r\n                                    <p class=\"text-main\"><span class=\"fw-bold me-3\">Genres</span>{genreText}</p>\r\n                                    <p class=\"text-main\"><span class=\"fw-bold me-3\">Maturity</span>{this.props.series.maturity && this.props.series.maturity.length > 0 ? this.props.series.maturity : 'N/A'}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row my-3 d-flex d-lg-none pedestal rounded-3 py-2 g-0\">\r\n                            <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                <img src=\"/streamdex-icon.svg\" width=\"28\" height=\"28\" class=\"d-inline-block align-text-top\"/>\r\n                                <h5 class=\"m-0 ms-1\">{this.props.series.streamdex_rating ? this.props.series.streamdex_rating+'%' : '0%'}</h5>\r\n                            </div>\r\n                            {this.props.series.imdb_link ?\r\n                                <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                    <h5 class=\"mb-0\">\r\n                                        <a href={this.props.series.imdb_link} class=\"d-flex flex-row align-items-center link-light\">\r\n                                            <img src=\"/imdblogo.png\" width=\"42\" height=\"18\" class=\"d-inline-block align-text-top\"/>\r\n                                            {this.props.series.imdb_rating ? \r\n                                                <span class=\"ms-1\">{this.props.series.imdb_rating}</span>\r\n                                            : ''}\r\n                                        </a>\r\n                                    </h5>\r\n                                </div>\r\n                            : ''}\r\n                            {this.props.series.rotten_tomatoes_link ?\r\n                                <div class=\"col d-flex flex-row align-items-center justify-content-center\">\r\n                                    <h5 class=\"mb-0\">\r\n                                        <a href={this.props.series.rotten_tomatoes_link} class=\"d-flex flex-row align-items-center link-light\">\r\n                                            <img src=\"/rottentomatoeslogo.png\" width=\"24\" height=\"24\" class=\"d-inline-block align-text-top\"/>\r\n                                            {this.props.series.rotten_tomatoes_rating ? \r\n                                                <span class=\"ms-1\">{this.props.series.rotten_tomatoes_rating}</span>\r\n                                            : ''}\r\n                                        </a>\r\n                                    </h5>\r\n                                </div>\r\n                            : ''}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default Series;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\NotFound\\NotFound.js",["244"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass NotFound extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>404 NotFound.js</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default NotFound;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Loading\\Loading.js",[],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\util\\validate.js",[],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Title\\Title.js",[],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Search\\Search.js",["245","246","247","248"],"import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Footer from '../../comps/Footer/Footer.js';\r\n\r\nimport TitlePreview from '../../comps/TitlePreview/TitlePreview.js';\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass Search extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            titles: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        //let queries = queryString.parse(this.props.location.search);\r\n        fetch(process.env.REACT_APP_API + 'titles/' + this.props.location.search).then((res) => {\r\n            if (res.ok)\r\n                return res.json();\r\n        }).then((res) => {\r\n            this.setState({titles: res});\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(previousProps, previousState){\r\n        console.log(previousProps);\r\n        if (previousProps.location.search != this.props.location.search){\r\n            fetch(process.env.REACT_APP_API + 'titles/' + this.props.location.search).then((res) => {\r\n                if (res.ok)\r\n                    return res.json();\r\n            }).then((res) => {\r\n                this.setState({titles: res});\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            <div class=\"h-100 flex-grow-1\">\r\n                <div class=\"container pt-3 h-100 d-flex flex-column\">\r\n                    <div class=\"row g-3\">\r\n                        {this.state.titles.map(t => (\r\n                            <TitlePreview title={t} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\Modal\\Modal.js",[],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\TitlePreview\\TitlePreview.js",[],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\pages\\Contact\\Contact.js",["249"],"import React from 'react';\r\n\r\nimport Footer from '../../comps/Footer/Footer.js';\r\n\r\nclass Contact extends React.Component {\r\n    \r\n    componentDidMount(){\r\n        const script = document.createElement('script');\r\n\r\n        script.src = 'https://platform.linkedin.com/badges/js/profile.js';\r\n        script.async = true;\r\n        script.defer = true;\r\n\r\n        document.body.appendChild(script);\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            <div class=\"h-100 flex-grow-1\">\r\n                <div class=\"container h-100\">\r\n                    <div class=\"row mt-5\">\r\n                        <div class=\"col d-flex flex-column justify-content-center my-4\">\r\n                            <h2 class=\"text-center text-nunito-eb\">Contact Us</h2>\r\n                            <h6 class=\"text-center\">Need to get in touch with us? Send any inquires about Streamdex to <a href=\"mailto: steamdex1@gmail.com\">steamdex1@gmail.com</a>.</h6>\r\n                        </div>\r\n                        <div class=\"col my-4 text-center\">\r\n                            <h3 class=\"text-center mb-3 text-nunito-eb\">Owner/Lead designer</h3>\r\n                            <div class=\"badge-base LI-profile-badge\" data-locale=\"en_US\" data-size=\"large\" data-theme=\"light\" data-type=\"HORIZONTAL\" data-vanity=\"arthur-lewis\" data-version=\"v1\"><a class=\"badge-base__link LI-simple-link\" href=\"https://www.linkedin.com/in/arthur-lewis?trk=profile-badge\" /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\index.js",["250"],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\comps\\TitleStreamPopup\\TitleStreamPopup.js",["251"],"C:\\Users\\larth\\Coding\\streamfinder\\client\\src\\util\\utils.js",[],{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"252","replacedBy":"256"},{"ruleId":"254","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":16},{"ruleId":"252","replacedBy":"262"},{"ruleId":"254","replacedBy":"263"},{"ruleId":"258","severity":1,"message":"259","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":14,"column":43,"nodeType":"266","messageId":"267","endLine":14,"endColumn":45},{"ruleId":"268","severity":1,"message":"269","line":23,"column":21,"nodeType":"270","endLine":23,"endColumn":101},{"ruleId":"264","severity":1,"message":"265","line":11,"column":31,"nodeType":"266","messageId":"267","endLine":11,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":13,"column":17,"nodeType":"273","endLine":13,"endColumn":27},{"ruleId":"274","severity":1,"message":"275","line":15,"column":97,"nodeType":"276","messageId":"277","endLine":15,"endColumn":99},{"ruleId":"268","severity":1,"message":"269","line":46,"column":21,"nodeType":"270","endLine":46,"endColumn":101},{"ruleId":"252","replacedBy":"278"},{"ruleId":"254","replacedBy":"279"},{"ruleId":"264","severity":1,"message":"280","line":26,"column":47,"nodeType":"266","messageId":"281","endLine":26,"endColumn":49},{"ruleId":"274","severity":1,"message":"282","line":29,"column":135,"nodeType":"276","messageId":"277","endLine":29,"endColumn":137},{"ruleId":"264","severity":1,"message":"265","line":30,"column":25,"nodeType":"283","messageId":"284","endLine":30,"endColumn":32},{"ruleId":"274","severity":1,"message":"282","line":32,"column":33,"nodeType":"276","messageId":"277","endLine":32,"endColumn":35},{"ruleId":"264","severity":1,"message":"265","line":34,"column":21,"nodeType":"283","messageId":"284","endLine":34,"endColumn":28},{"ruleId":"252","replacedBy":"285"},{"ruleId":"254","replacedBy":"286"},{"ruleId":"268","severity":1,"message":"269","line":60,"column":33,"nodeType":"270","endLine":60,"endColumn":130},{"ruleId":"274","severity":1,"message":"282","line":70,"column":162,"nodeType":"276","messageId":"277","endLine":70,"endColumn":164},{"ruleId":"268","severity":1,"message":"269","line":77,"column":57,"nodeType":"270","endLine":77,"endColumn":146},{"ruleId":"274","severity":1,"message":"282","line":26,"column":56,"nodeType":"276","messageId":"277","endLine":26,"endColumn":58},{"ruleId":"268","severity":1,"message":"269","line":54,"column":29,"nodeType":"270","endLine":54,"endColumn":122},{"ruleId":"258","severity":1,"message":"287","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":13},{"ruleId":"258","severity":1,"message":"288","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":14},{"ruleId":"258","severity":1,"message":"289","line":10,"column":7,"nodeType":"260","messageId":"261","endLine":10,"endColumn":13},{"ruleId":"258","severity":1,"message":"290","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":25},{"ruleId":"291","severity":1,"message":"292","line":5,"column":5,"nodeType":"293","messageId":"294","endLine":7,"endColumn":6},{"ruleId":"268","severity":1,"message":"269","line":16,"column":33,"nodeType":"270","endLine":16,"endColumn":126},{"ruleId":"274","severity":1,"message":"282","line":36,"column":31,"nodeType":"276","messageId":"277","endLine":36,"endColumn":33},{"ruleId":"274","severity":1,"message":"282","line":39,"column":29,"nodeType":"276","messageId":"277","endLine":39,"endColumn":31},{"ruleId":"274","severity":1,"message":"282","line":44,"column":36,"nodeType":"276","messageId":"277","endLine":44,"endColumn":38},{"ruleId":"274","severity":1,"message":"282","line":78,"column":43,"nodeType":"276","messageId":"277","endLine":78,"endColumn":45},{"ruleId":"268","severity":1,"message":"269","line":96,"column":33,"nodeType":"270","endLine":96,"endColumn":126},{"ruleId":"268","severity":1,"message":"269","line":103,"column":45,"nodeType":"270","endLine":103,"endColumn":132},{"ruleId":"268","severity":1,"message":"269","line":115,"column":45,"nodeType":"270","endLine":115,"endColumn":142},{"ruleId":"268","severity":1,"message":"269","line":165,"column":33,"nodeType":"270","endLine":165,"endColumn":126},{"ruleId":"268","severity":1,"message":"269","line":172,"column":45,"nodeType":"270","endLine":172,"endColumn":132},{"ruleId":"268","severity":1,"message":"269","line":184,"column":45,"nodeType":"270","endLine":184,"endColumn":142},{"ruleId":"258","severity":1,"message":"259","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":16},{"ruleId":"258","severity":1,"message":"295","line":4,"column":7,"nodeType":"260","messageId":"261","endLine":4,"endColumn":10},{"ruleId":"274","severity":1,"message":"282","line":49,"column":28,"nodeType":"276","messageId":"277","endLine":49,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":51,"column":28,"nodeType":"276","messageId":"277","endLine":51,"endColumn":30},{"ruleId":"291","severity":1,"message":"292","line":7,"column":5,"nodeType":"293","messageId":"294","endLine":9,"endColumn":6},{"ruleId":"252","replacedBy":"296"},{"ruleId":"254","replacedBy":"297"},{"ruleId":"274","severity":1,"message":"282","line":35,"column":56,"nodeType":"276","messageId":"277","endLine":35,"endColumn":58},{"ruleId":"274","severity":1,"message":"282","line":35,"column":92,"nodeType":"276","messageId":"277","endLine":35,"endColumn":94},{"ruleId":"274","severity":1,"message":"282","line":66,"column":23,"nodeType":"276","messageId":"277","endLine":66,"endColumn":25},{"ruleId":"274","severity":1,"message":"282","line":71,"column":35,"nodeType":"276","messageId":"277","endLine":71,"endColumn":37},{"ruleId":"274","severity":1,"message":"282","line":62,"column":28,"nodeType":"276","messageId":"277","endLine":62,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":64,"column":28,"nodeType":"276","messageId":"277","endLine":64,"endColumn":30},{"ruleId":"258","severity":1,"message":"298","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":20},{"ruleId":"258","severity":1,"message":"299","line":9,"column":7,"nodeType":"260","messageId":"261","endLine":9,"endColumn":12},{"ruleId":"274","severity":1,"message":"282","line":37,"column":31,"nodeType":"276","messageId":"277","endLine":37,"endColumn":33},{"ruleId":"274","severity":1,"message":"282","line":40,"column":29,"nodeType":"276","messageId":"277","endLine":40,"endColumn":31},{"ruleId":"274","severity":1,"message":"282","line":45,"column":36,"nodeType":"276","messageId":"277","endLine":45,"endColumn":38},{"ruleId":"274","severity":1,"message":"282","line":83,"column":43,"nodeType":"276","messageId":"277","endLine":83,"endColumn":45},{"ruleId":"268","severity":1,"message":"269","line":101,"column":33,"nodeType":"270","endLine":101,"endColumn":126},{"ruleId":"268","severity":1,"message":"269","line":108,"column":45,"nodeType":"270","endLine":108,"endColumn":132},{"ruleId":"268","severity":1,"message":"269","line":120,"column":45,"nodeType":"270","endLine":120,"endColumn":142},{"ruleId":"300","severity":1,"message":"301","line":148,"column":53,"nodeType":"270","endLine":148,"endColumn":203},{"ruleId":"268","severity":1,"message":"269","line":214,"column":33,"nodeType":"270","endLine":214,"endColumn":126},{"ruleId":"268","severity":1,"message":"269","line":221,"column":45,"nodeType":"270","endLine":221,"endColumn":132},{"ruleId":"268","severity":1,"message":"269","line":233,"column":45,"nodeType":"270","endLine":233,"endColumn":142},{"ruleId":"258","severity":1,"message":"259","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":16},{"ruleId":"258","severity":1,"message":"290","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":25},{"ruleId":"258","severity":1,"message":"259","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":16},{"ruleId":"258","severity":1,"message":"302","line":8,"column":7,"nodeType":"260","messageId":"261","endLine":8,"endColumn":18},{"ruleId":"274","severity":1,"message":"275","line":31,"column":43,"nodeType":"276","messageId":"277","endLine":31,"endColumn":45},{"ruleId":"303","severity":1,"message":"304","line":28,"column":195,"nodeType":"270","endLine":28,"endColumn":306},{"ruleId":"258","severity":1,"message":"305","line":15,"column":7,"nodeType":"260","messageId":"261","endLine":15,"endColumn":16},{"ruleId":"268","severity":1,"message":"269","line":44,"column":41,"nodeType":"270","endLine":44,"endColumn":121},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],["306"],["307"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar",["306"],["307"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["306"],["307"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Expected '===' and instead saw '=='.","ReturnStatement","expectedReturnValue",["306"],["307"],"'Movie' is defined but never used.","'Series' is defined but never used.","'series' is assigned a value but never used.","'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'SVG' is assigned a value but never used.",["306"],["307"],"'withRouter' is defined but never used.","'Utils' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'queryString' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'bootstrap' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]